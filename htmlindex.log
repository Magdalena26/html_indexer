/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C2*/SET SCHEMA PUBLIC
drop table ProcessedUrl if exists
drop table Sentence if exists
create table ProcessedUrl (id bigint generated by default as identity (start with 1), url longvarchar, date date, primary key (id))
create table Sentence (id bigint generated by default as identity (start with 1), content longvarchar, processedUrlId bigint not null, idx integer, primary key (id))
alter table Sentence add constraint FKn97grs3ia33bikdyy3eq1h3n9 foreign key (processedUrlId) references ProcessedUrl
INSERT INTO PROCESSEDURL VALUES(1,'https://docs.jboss.org/hibernate/orm/3.3/reference/en/html/queryhql.html#queryhqlgrouping','2016-11-02')
INSERT INTO SENTENCE VALUES(1,'Hibernate.org',1,NULL)
INSERT INTO SENTENCE VALUES(2,'Community Documentation',1,NULL)
INSERT INTO SENTENCE VALUES(3,'Prev',1,NULL)
INSERT INTO SENTENCE VALUES(4,'Next',1,NULL)
INSERT INTO SENTENCE VALUES(5,'Chapter\u00a014.\u00a0HQL: The Hibernate Query Language',1,NULL)
INSERT INTO SENTENCE VALUES(6,'14.1',1,NULL)
INSERT INTO SENTENCE VALUES(7,'Case Sensitivity',1,NULL)
INSERT INTO SENTENCE VALUES(8,'14.2',1,NULL)
INSERT INTO SENTENCE VALUES(9,'The from clause',1,NULL)
INSERT INTO SENTENCE VALUES(10,'14.3',1,NULL)
INSERT INTO SENTENCE VALUES(11,'Associations and joins',1,NULL)
INSERT INTO SENTENCE VALUES(12,'14.4',1,NULL)
INSERT INTO SENTENCE VALUES(13,'Forms of join syntax',1,NULL)
INSERT INTO SENTENCE VALUES(14,'14.5',1,NULL)
INSERT INTO SENTENCE VALUES(15,'Referring to identifier property',1,NULL)
INSERT INTO SENTENCE VALUES(16,'14.6',1,NULL)
INSERT INTO SENTENCE VALUES(17,'The select clause',1,NULL)
INSERT INTO SENTENCE VALUES(18,'14.7',1,NULL)
INSERT INTO SENTENCE VALUES(19,'Aggregate functions',1,NULL)
INSERT INTO SENTENCE VALUES(20,'14.8',1,NULL)
INSERT INTO SENTENCE VALUES(21,'Polymorphic queries',1,NULL)
INSERT INTO SENTENCE VALUES(22,'14.9',1,NULL)
INSERT INTO SENTENCE VALUES(23,'The where clause',1,NULL)
INSERT INTO SENTENCE VALUES(24,'14.10',1,NULL)
INSERT INTO SENTENCE VALUES(25,'Expressions',1,NULL)
INSERT INTO SENTENCE VALUES(26,'14.11',1,NULL)
INSERT INTO SENTENCE VALUES(27,'The order by clause',1,NULL)
INSERT INTO SENTENCE VALUES(28,'14.12',1,NULL)
INSERT INTO SENTENCE VALUES(29,'The group by clause',1,NULL)
INSERT INTO SENTENCE VALUES(30,'14.13',1,NULL)
INSERT INTO SENTENCE VALUES(31,'Subqueries',1,NULL)
INSERT INTO SENTENCE VALUES(32,'14.14',1,NULL)
INSERT INTO SENTENCE VALUES(33,'HQL examples',1,NULL)
INSERT INTO SENTENCE VALUES(34,'14.15',1,NULL)
INSERT INTO SENTENCE VALUES(35,'Bulk update and delete',1,NULL)
INSERT INTO SENTENCE VALUES(36,'14.16',1,NULL)
INSERT INTO SENTENCE VALUES(37,'Tips & Tricks',1,NULL)
INSERT INTO SENTENCE VALUES(38,'14.17',1,NULL)
INSERT INTO SENTENCE VALUES(39,'Components',1,NULL)
INSERT INTO SENTENCE VALUES(40,'14.18',1,NULL)
INSERT INTO SENTENCE VALUES(41,'Row value constructor syntax',1,NULL)
INSERT INTO SENTENCE VALUES(42,'Hibernate uses a powerful query language (HQL) that is similar in appearance to SQL',1,NULL)
INSERT INTO SENTENCE VALUES(43,'Compared with SQL, however, HQL is fully object-oriented and understands notions like inheritance, polymorphism and association.',1,NULL)
INSERT INTO SENTENCE VALUES(44,'14.1.\u00a0Case Sensitivity',1,NULL)
INSERT INTO SENTENCE VALUES(45,'With the exception of names of Java classes and properties, queries are case-insensitive',1,NULL)
INSERT INTO SENTENCE VALUES(46,'So is the same as is the same as , but is not , and is not .',1,NULL)
INSERT INTO SENTENCE VALUES(47,'SeLeCT',1,NULL)
INSERT INTO SENTENCE VALUES(48,'sELEct',1,NULL)
INSERT INTO SENTENCE VALUES(49,'SELECT',1,NULL)
INSERT INTO SENTENCE VALUES(50,'org.hibernate.eg.FOO',1,NULL)
INSERT INTO SENTENCE VALUES(51,'org.hibernate.eg.Foo',1,NULL)
INSERT INTO SENTENCE VALUES(52,'foo.barSet',1,NULL)
INSERT INTO SENTENCE VALUES(53,'foo.BARSET',1,NULL)
INSERT INTO SENTENCE VALUES(54,'This manual uses lowercase HQL keywords',1,NULL)
INSERT INTO SENTENCE VALUES(55,'Some users find queries with uppercase keywords more readable, but this convention is unsuitable for queries embedded in Java code.',1,NULL)
INSERT INTO SENTENCE VALUES(56,'14.2.\u00a0The from clause',1,NULL)
INSERT INTO SENTENCE VALUES(57,'The simplest possible Hibernate query is of the form:',1,NULL)
INSERT INTO SENTENCE VALUES(58,'from eg.Cat',1,NULL)
INSERT INTO SENTENCE VALUES(59,'This returns all instances of the class ',1,NULL)
INSERT INTO SENTENCE VALUES(60,'You do not usually need to qualify the class name, since is the default',1,NULL)
INSERT INTO SENTENCE VALUES(61,'For example:',1,NULL)
INSERT INTO SENTENCE VALUES(62,'eg.Cat',1,NULL)
INSERT INTO SENTENCE VALUES(63,'auto-import',1,NULL)
INSERT INTO SENTENCE VALUES(64,'from Cat',1,NULL)
INSERT INTO SENTENCE VALUES(65,'In order to refer to the in other parts of the query, you will need to assign an ',1,NULL)
INSERT INTO SENTENCE VALUES(66,'For example:',1,NULL)
INSERT INTO SENTENCE VALUES(67,'Cat',1,NULL)
INSERT INTO SENTENCE VALUES(68,'alias',1,NULL)
INSERT INTO SENTENCE VALUES(69,'from Cat as cat',1,NULL)
INSERT INTO SENTENCE VALUES(70,'This query assigns the alias to instances, so you can use that alias later in the query',1,NULL)
INSERT INTO SENTENCE VALUES(71,'The keyword is optional',1,NULL)
INSERT INTO SENTENCE VALUES(72,'You could also write:',1,NULL)
INSERT INTO SENTENCE VALUES(73,'cat',1,NULL)
INSERT INTO SENTENCE VALUES(74,'Cat',1,NULL)
INSERT INTO SENTENCE VALUES(75,'as',1,NULL)
INSERT INTO SENTENCE VALUES(76,'from Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(77,'Multiple classes can appear, resulting in a cartesian product or "cross" join.',1,NULL)
INSERT INTO SENTENCE VALUES(78,'from Formula, Parameter',1,NULL)
INSERT INTO SENTENCE VALUES(79,'from Formula as form, Parameter as param',1,NULL)
INSERT INTO SENTENCE VALUES(80,'It is good practice to name query aliases using an initial lowercase as this is consistent with Java naming standards for local variables (e.g',1,NULL)
INSERT INTO SENTENCE VALUES(81,').',1,NULL)
INSERT INTO SENTENCE VALUES(82,'domesticCat',1,NULL)
INSERT INTO SENTENCE VALUES(83,'14.3.\u00a0Associations and joins',1,NULL)
INSERT INTO SENTENCE VALUES(84,'You can also assign aliases to associated entities or to elements of a collection of values using a ',1,NULL)
INSERT INTO SENTENCE VALUES(85,'For example:',1,NULL)
INSERT INTO SENTENCE VALUES(86,'join',1,NULL)
INSERT INTO SENTENCE VALUES(87,'from Cat as cat\u000a    inner join cat.mate as mate\u000a    left outer join cat.kittens as kitten',1,NULL)
INSERT INTO SENTENCE VALUES(88,'from Cat as cat left join cat.mate.kittens as kittens',1,NULL)
INSERT INTO SENTENCE VALUES(89,'from Formula form full join form.parameter param',1,NULL)
INSERT INTO SENTENCE VALUES(90,'The supported join types are borrowed from ANSI SQL:',1,NULL)
INSERT INTO SENTENCE VALUES(91,'inner join',1,NULL)
INSERT INTO SENTENCE VALUES(92,'left outer join',1,NULL)
INSERT INTO SENTENCE VALUES(93,'right outer join',1,NULL)
INSERT INTO SENTENCE VALUES(94,'(not usually useful)',1,NULL)
INSERT INTO SENTENCE VALUES(95,'full join',1,NULL)
INSERT INTO SENTENCE VALUES(96,'The , and constructs may be abbreviated.',1,NULL)
INSERT INTO SENTENCE VALUES(97,'inner join',1,NULL)
INSERT INTO SENTENCE VALUES(98,'left outer join',1,NULL)
INSERT INTO SENTENCE VALUES(99,'right outer join',1,NULL)
INSERT INTO SENTENCE VALUES(100,'from Cat as cat\u000a    join cat.mate as mate\u000a    left join cat.kittens as kitten',1,NULL)
INSERT INTO SENTENCE VALUES(101,'You may supply extra join conditions using the HQL keyword.',1,NULL)
INSERT INTO SENTENCE VALUES(102,'with',1,NULL)
INSERT INTO SENTENCE VALUES(103,'from Cat as cat\u000a    left join cat.kittens as kitten\u000a        with kitten.bodyWeight > 10.0',1,NULL)
INSERT INTO SENTENCE VALUES(104,'A "fetch" join allows associations or collections of values to be initialized along with their parent objects using a single select',1,NULL)
INSERT INTO SENTENCE VALUES(105,'This is particularly useful in the case of a collection',1,NULL)
INSERT INTO SENTENCE VALUES(106,'It effectively overrides the outer join and lazy declarations of the mapping file for associations and collections',1,NULL)
INSERT INTO SENTENCE VALUES(107,'See for more information.',1,NULL)
INSERT INTO SENTENCE VALUES(108,'Section\u00a019.1, \u201cFetching strategies\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(109,'from Cat as cat\u000a    inner join fetch cat.mate\u000a    left join fetch cat.kittens',1,NULL)
INSERT INTO SENTENCE VALUES(110,'A fetch join does not usually need to assign an alias, because the associated objects should not be used in the clause (or any other clause)',1,NULL)
INSERT INTO SENTENCE VALUES(111,'The associated objects are also not returned directly in the query results',1,NULL)
INSERT INTO SENTENCE VALUES(112,'Instead, they may be accessed via the parent object',1,NULL)
INSERT INTO SENTENCE VALUES(113,'The only reason you might need an alias is if you are recursively join fetching a further collection:',1,NULL)
INSERT INTO SENTENCE VALUES(114,'where',1,NULL)
INSERT INTO SENTENCE VALUES(115,'from Cat as cat\u000a    inner join fetch cat.mate\u000a    left join fetch cat.kittens child\u000a    left join fetch child.kittens',1,NULL)
INSERT INTO SENTENCE VALUES(116,'The construct cannot be used in queries called using (though can be used)',1,NULL)
INSERT INTO SENTENCE VALUES(117,'should be used together with or , as these operations are based on the result rows which usually contain duplicates for eager collection fetching, hence, the number of rows is not what you would expect',1,NULL)
INSERT INTO SENTENCE VALUES(118,'should also not be used together with impromptu condition',1,NULL)
INSERT INTO SENTENCE VALUES(119,'It is possible to create a cartesian product by join fetching more than one collection in a query, so take care in this case',1,NULL)
INSERT INTO SENTENCE VALUES(120,'Join fetching multiple collection roles can produce unexpected results for bag mappings, so user discretion is advised when formulating queries in this case',1,NULL)
INSERT INTO SENTENCE VALUES(121,'Finally, note that and are not meaningful.',1,NULL)
INSERT INTO SENTENCE VALUES(122,'fetch',1,NULL)
INSERT INTO SENTENCE VALUES(123,'iterate()',1,NULL)
INSERT INTO SENTENCE VALUES(124,'scroll()',1,NULL)
INSERT INTO SENTENCE VALUES(125,'Fetch',1,NULL)
INSERT INTO SENTENCE VALUES(126,'setMaxResults()',1,NULL)
INSERT INTO SENTENCE VALUES(127,'setFirstResult()',1,NULL)
INSERT INTO SENTENCE VALUES(128,'Fetch',1,NULL)
INSERT INTO SENTENCE VALUES(129,'with',1,NULL)
INSERT INTO SENTENCE VALUES(130,'full join fetch',1,NULL)
INSERT INTO SENTENCE VALUES(131,'right join fetch',1,NULL)
INSERT INTO SENTENCE VALUES(132,'If you are using property-level lazy fetching (with bytecode instrumentation), it is possible to force Hibernate to fetch the lazy properties in the first query immediately using .',1,NULL)
INSERT INTO SENTENCE VALUES(133,'fetch all properties',1,NULL)
INSERT INTO SENTENCE VALUES(134,'from Document fetch all properties order by name',1,NULL)
INSERT INTO SENTENCE VALUES(135,'from Document doc fetch all properties where lower(doc.name) like ''%cats%''',1,NULL)
INSERT INTO SENTENCE VALUES(136,'14.4.\u00a0Forms of join syntax',1,NULL)
INSERT INTO SENTENCE VALUES(137,'HQL supports two forms of association joining: and .',1,NULL)
INSERT INTO SENTENCE VALUES(138,'implicit',1,NULL)
INSERT INTO SENTENCE VALUES(139,'explicit',1,NULL)
INSERT INTO SENTENCE VALUES(140,'The queries shown in the previous section all use the form, that is, where the join keyword is explicitly used in the from clause',1,NULL)
INSERT INTO SENTENCE VALUES(141,'This is the recommended form.',1,NULL)
INSERT INTO SENTENCE VALUES(142,'explicit',1,NULL)
INSERT INTO SENTENCE VALUES(143,'The form does not use the join keyword',1,NULL)
INSERT INTO SENTENCE VALUES(144,'Instead, the associations are "dereferenced" using dot-notation',1,NULL)
INSERT INTO SENTENCE VALUES(145,'joins can appear in any of the HQL clauses',1,NULL)
INSERT INTO SENTENCE VALUES(146,'join result in inner joins in the resulting SQL statement.',1,NULL)
INSERT INTO SENTENCE VALUES(147,'implicit',1,NULL)
INSERT INTO SENTENCE VALUES(148,'implicit',1,NULL)
INSERT INTO SENTENCE VALUES(149,'implicit',1,NULL)
INSERT INTO SENTENCE VALUES(150,'from Cat as cat where cat.mate.name like ''%s%''',1,NULL)
INSERT INTO SENTENCE VALUES(151,'14.5.\u00a0Referring to identifier property',1,NULL)
INSERT INTO SENTENCE VALUES(152,'There are 2 ways to refer to an entity''s identifier property:',1,NULL)
INSERT INTO SENTENCE VALUES(153,'The special property (lowercase) may be used to reference the identifier property of an entity .',1,NULL)
INSERT INTO SENTENCE VALUES(154,'id',1,NULL)
INSERT INTO SENTENCE VALUES(155,'provided that the entity does not define a non-identifier property named id',1,NULL)
INSERT INTO SENTENCE VALUES(156,'If the entity defines a named identifier property, you can use that property name.',1,NULL)
INSERT INTO SENTENCE VALUES(157,'References to composite identifier properties follow the same naming rules',1,NULL)
INSERT INTO SENTENCE VALUES(158,'If the entity has a non-identifier property named id, the composite identifier property can only be referenced by its defined named',1,NULL)
INSERT INTO SENTENCE VALUES(159,'Otherwise, the special property can be used to reference the identifier property.',1,NULL)
INSERT INTO SENTENCE VALUES(160,'id',1,NULL)
INSERT INTO SENTENCE VALUES(161,'Important',1,NULL)
INSERT INTO SENTENCE VALUES(162,'Please note that, starting in version 3.2.2, this has changed significantly',1,NULL)
INSERT INTO SENTENCE VALUES(163,'In previous versions, referred to the identifier property regardless of its actual name',1,NULL)
INSERT INTO SENTENCE VALUES(164,'A ramification of that decision was that non-identifier properties named could never be referenced in Hibernate queries.',1,NULL)
INSERT INTO SENTENCE VALUES(165,'id',1,NULL)
INSERT INTO SENTENCE VALUES(166,'always',1,NULL)
INSERT INTO SENTENCE VALUES(167,'id',1,NULL)
INSERT INTO SENTENCE VALUES(168,'14.6.\u00a0The select clause',1,NULL)
INSERT INTO SENTENCE VALUES(169,'The clause picks which objects and properties to return in the query result set',1,NULL)
INSERT INTO SENTENCE VALUES(170,'Consider the following:',1,NULL)
INSERT INTO SENTENCE VALUES(171,'select',1,NULL)
INSERT INTO SENTENCE VALUES(172,'select mate\u000afrom Cat as cat\u000a    inner join cat.mate as mate',1,NULL)
INSERT INTO SENTENCE VALUES(173,'The query will select s of other s',1,NULL)
INSERT INTO SENTENCE VALUES(174,'You can express this query more compactly as:',1,NULL)
INSERT INTO SENTENCE VALUES(175,'mate',1,NULL)
INSERT INTO SENTENCE VALUES(176,'Cat',1,NULL)
INSERT INTO SENTENCE VALUES(177,'select cat.mate from Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(178,'Queries can return properties of any value type including properties of component type:',1,NULL)
INSERT INTO SENTENCE VALUES(179,'select cat.name from DomesticCat cat\u000awhere cat.name like ''fri%''',1,NULL)
INSERT INTO SENTENCE VALUES(180,'select cust.name.firstName from Customer as cust',1,NULL)
INSERT INTO SENTENCE VALUES(181,'Queries can return multiple objects and/or properties as an array of type :',1,NULL)
INSERT INTO SENTENCE VALUES(182,'Object[]',1,NULL)
INSERT INTO SENTENCE VALUES(183,'select mother, offspr, mate.name\u000afrom DomesticCat as mother\u000a    inner join mother.mate as mate\u000a    left outer join mother.kittens as offspr',1,NULL)
INSERT INTO SENTENCE VALUES(184,'Or as a :',1,NULL)
INSERT INTO SENTENCE VALUES(185,'List',1,NULL)
INSERT INTO SENTENCE VALUES(186,'select new list(mother, offspr, mate.name)\u000afrom DomesticCat as mother\u000a    inner join mother.mate as mate\u000a    left outer join mother.kittens as offspr',1,NULL)
INSERT INTO SENTENCE VALUES(187,'Or - assuming that the class has an appropriate constructor - as an actual typesafe Java object:',1,NULL)
INSERT INTO SENTENCE VALUES(188,'Family',1,NULL)
INSERT INTO SENTENCE VALUES(189,'select new Family(mother, mate, offspr)\u000afrom DomesticCat as mother\u000a    join mother.mate as mate\u000a    left join mother.kittens as offspr',1,NULL)
INSERT INTO SENTENCE VALUES(190,'You can assign aliases to selected expressions using :',1,NULL)
INSERT INTO SENTENCE VALUES(191,'as',1,NULL)
INSERT INTO SENTENCE VALUES(192,'select max(bodyWeight) as max, min(bodyWeight) as min, count(*) as n\u000afrom Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(193,'This is most useful when used together with :',1,NULL)
INSERT INTO SENTENCE VALUES(194,'select new map',1,NULL)
INSERT INTO SENTENCE VALUES(195,'select new map( max(bodyWeight) as max, min(bodyWeight) as min, count(*) as n )\u000afrom Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(196,'This query returns a from aliases to selected values.',1,NULL)
INSERT INTO SENTENCE VALUES(197,'Map',1,NULL)
INSERT INTO SENTENCE VALUES(198,'14.7.\u00a0Aggregate functions',1,NULL)
INSERT INTO SENTENCE VALUES(199,'HQL queries can even return the results of aggregate functions on properties:',1,NULL)
INSERT INTO SENTENCE VALUES(200,'select avg(cat.weight), sum(cat.weight), max(cat.weight), count(cat)\u000afrom Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(201,'The supported aggregate functions are:',1,NULL)
INSERT INTO SENTENCE VALUES(202,'avg(...), sum(...), min(...), max(...)',1,NULL)
INSERT INTO SENTENCE VALUES(203,'count(*)',1,NULL)
INSERT INTO SENTENCE VALUES(204,'count(...), count(distinct ...), count(all...)',1,NULL)
INSERT INTO SENTENCE VALUES(205,'You can use arithmetic operators, concatenation, and recognized SQL functions in the select clause:',1,NULL)
INSERT INTO SENTENCE VALUES(206,'select cat.weight + sum(kitten.weight)\u000afrom Cat cat\u000a    join cat.kittens kitten\u000agroup by cat.id, cat.weight',1,NULL)
INSERT INTO SENTENCE VALUES(207,'select firstName||'' ''||initial||'' ''||upper(lastName) from Person',1,NULL)
INSERT INTO SENTENCE VALUES(208,'The and keywords can be used and have the same semantics as in SQL.',1,NULL)
INSERT INTO SENTENCE VALUES(209,'distinct',1,NULL)
INSERT INTO SENTENCE VALUES(210,'all',1,NULL)
INSERT INTO SENTENCE VALUES(211,'select distinct cat.name from Cat cat\u000a\u000aselect count(distinct cat.name), count(cat) from Cat cat',1,NULL)
INSERT INTO SENTENCE VALUES(212,'14.8.\u00a0Polymorphic queries',1,NULL)
INSERT INTO SENTENCE VALUES(213,'A query like:',1,NULL)
INSERT INTO SENTENCE VALUES(214,'from Cat as cat',1,NULL)
INSERT INTO SENTENCE VALUES(215,'returns instances not only of , but also of subclasses like ',1,NULL)
INSERT INTO SENTENCE VALUES(216,'Hibernate queries can name Java class or interface in the clause',1,NULL)
INSERT INTO SENTENCE VALUES(217,'The query will return instances of all persistent classes that extend that class or implement the interface',1,NULL)
INSERT INTO SENTENCE VALUES(218,'The following query would return all persistent objects:',1,NULL)
INSERT INTO SENTENCE VALUES(219,'Cat',1,NULL)
INSERT INTO SENTENCE VALUES(220,'DomesticCat',1,NULL)
INSERT INTO SENTENCE VALUES(221,'any',1,NULL)
INSERT INTO SENTENCE VALUES(222,'from',1,NULL)
INSERT INTO SENTENCE VALUES(223,'from java.lang.Object o',1,NULL)
INSERT INTO SENTENCE VALUES(224,'The interface might be implemented by various persistent classes:',1,NULL)
INSERT INTO SENTENCE VALUES(225,'Named',1,NULL)
INSERT INTO SENTENCE VALUES(226,'from Named n, Named m where n.name = m.name',1,NULL)
INSERT INTO SENTENCE VALUES(227,'These last two queries will require more than one SQL ',1,NULL)
INSERT INTO SENTENCE VALUES(228,'This means that the clause does not correctly order the whole result set',1,NULL)
INSERT INTO SENTENCE VALUES(229,'It also means you cannot call these queries using .',1,NULL)
INSERT INTO SENTENCE VALUES(230,'SELECT',1,NULL)
INSERT INTO SENTENCE VALUES(231,'order by',1,NULL)
INSERT INTO SENTENCE VALUES(232,'Query.scroll()',1,NULL)
INSERT INTO SENTENCE VALUES(233,'14.9.\u00a0The where clause',1,NULL)
INSERT INTO SENTENCE VALUES(234,'The clause allows you to refine the list of instances returned',1,NULL)
INSERT INTO SENTENCE VALUES(235,'If no alias exists, you can refer to properties by name:',1,NULL)
INSERT INTO SENTENCE VALUES(236,'where',1,NULL)
INSERT INTO SENTENCE VALUES(237,'from Cat where name=''Fritz''',1,NULL)
INSERT INTO SENTENCE VALUES(238,'If there is an alias, use a qualified property name:',1,NULL)
INSERT INTO SENTENCE VALUES(239,'from Cat as cat where cat.name=''Fritz''',1,NULL)
INSERT INTO SENTENCE VALUES(240,'This returns instances of named ''Fritz''.',1,NULL)
INSERT INTO SENTENCE VALUES(241,'Cat',1,NULL)
INSERT INTO SENTENCE VALUES(242,'The following query:',1,NULL)
INSERT INTO SENTENCE VALUES(243,'select foo\u000afrom Foo foo, Bar bar\u000awhere foo.startDate = bar.date',1,NULL)
INSERT INTO SENTENCE VALUES(244,'returns all instances of with an instance of with a property equal to the property of the ',1,NULL)
INSERT INTO SENTENCE VALUES(245,'Compound path expressions make the clause extremely powerful',1,NULL)
INSERT INTO SENTENCE VALUES(246,'Consider the following:',1,NULL)
INSERT INTO SENTENCE VALUES(247,'Foo',1,NULL)
INSERT INTO SENTENCE VALUES(248,'bar',1,NULL)
INSERT INTO SENTENCE VALUES(249,'date',1,NULL)
INSERT INTO SENTENCE VALUES(250,'startDate',1,NULL)
INSERT INTO SENTENCE VALUES(251,'Foo',1,NULL)
INSERT INTO SENTENCE VALUES(252,'where',1,NULL)
INSERT INTO SENTENCE VALUES(253,'from Cat cat where cat.mate.name is not null',1,NULL)
INSERT INTO SENTENCE VALUES(254,'This query translates to an SQL query with a table (inner) join',1,NULL)
INSERT INTO SENTENCE VALUES(255,'For example:',1,NULL)
INSERT INTO SENTENCE VALUES(256,'from Foo foo\u000awhere foo.bar.baz.customer.address.city is not null',1,NULL)
INSERT INTO SENTENCE VALUES(257,'would result in a query that would require four table joins in SQL.',1,NULL)
INSERT INTO SENTENCE VALUES(258,'The operator can be used to compare not only properties, but also instances:',1,NULL)
INSERT INTO SENTENCE VALUES(259,'from Cat cat, Cat rival where cat.mate = rival.mate',1,NULL)
INSERT INTO SENTENCE VALUES(260,'select cat, mate\u000afrom Cat cat, Cat mate\u000awhere cat.mate = mate',1,NULL)
INSERT INTO SENTENCE VALUES(261,'The special property (lowercase) can be used to reference the unique identifier of an object',1,NULL)
INSERT INTO SENTENCE VALUES(262,'See for more information.',1,NULL)
INSERT INTO SENTENCE VALUES(263,'id',1,NULL)
INSERT INTO SENTENCE VALUES(264,'Section\u00a014.5, \u201cReferring to identifier property\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(265,'from Cat as cat where cat.id = 123\u000a\u000afrom Cat as cat where cat.mate.id = 69',1,NULL)
INSERT INTO SENTENCE VALUES(266,'The second query is efficient and does not require a table join.',1,NULL)
INSERT INTO SENTENCE VALUES(267,'Properties of composite identifiers can also be used',1,NULL)
INSERT INTO SENTENCE VALUES(268,'Consider the following example where has composite identifiers consisting of and :',1,NULL)
INSERT INTO SENTENCE VALUES(269,'Person',1,NULL)
INSERT INTO SENTENCE VALUES(270,'country',1,NULL)
INSERT INTO SENTENCE VALUES(271,'medicareNumber',1,NULL)
INSERT INTO SENTENCE VALUES(272,'from bank.Person person\u000awhere person.id.country = ''AU''\u000a    and person.id.medicareNumber = 123456',1,NULL)
INSERT INTO SENTENCE VALUES(273,'from bank.Account account\u000awhere account.owner.id.country = ''AU''\u000a    and account.owner.id.medicareNumber = 123456',1,NULL)
INSERT INTO SENTENCE VALUES(274,'Once again, the second query does not require a table join.',1,NULL)
INSERT INTO SENTENCE VALUES(275,'See for more information regarding referencing identifier properties)',1,NULL)
INSERT INTO SENTENCE VALUES(276,'Section\u00a014.5, \u201cReferring to identifier property\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(277,'The special property accesses the discriminator value of an instance in the case of polymorphic persistence',1,NULL)
INSERT INTO SENTENCE VALUES(278,'A Java class name embedded in the where clause will be translated to its discriminator value.',1,NULL)
INSERT INTO SENTENCE VALUES(279,'class',1,NULL)
INSERT INTO SENTENCE VALUES(280,'from Cat cat where cat.class = DomesticCat',1,NULL)
INSERT INTO SENTENCE VALUES(281,'You can also use components or composite user types, or properties of said component types',1,NULL)
INSERT INTO SENTENCE VALUES(282,'See for more information.',1,NULL)
INSERT INTO SENTENCE VALUES(283,'Section\u00a014.17, \u201cComponents\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(284,'An "any" type has the special properties and that allows you to express a join in the following way (where is a property mapped with ):',1,NULL)
INSERT INTO SENTENCE VALUES(285,'id',1,NULL)
INSERT INTO SENTENCE VALUES(286,'class',1,NULL)
INSERT INTO SENTENCE VALUES(287,'AuditLog.item',1,NULL)
INSERT INTO SENTENCE VALUES(288,'<any>',1,NULL)
INSERT INTO SENTENCE VALUES(289,'from AuditLog log, Payment payment\u000awhere log.item.class = ''Payment'' and log.item.id = payment.id',1,NULL)
INSERT INTO SENTENCE VALUES(290,'The and would refer to the values of completely different database columns in the above query.',1,NULL)
INSERT INTO SENTENCE VALUES(291,'log.item.class',1,NULL)
INSERT INTO SENTENCE VALUES(292,'payment.class',1,NULL)
INSERT INTO SENTENCE VALUES(293,'14.10.\u00a0Expressions',1,NULL)
INSERT INTO SENTENCE VALUES(294,'Expressions used in the clause include the following:',1,NULL)
INSERT INTO SENTENCE VALUES(295,'where',1,NULL)
INSERT INTO SENTENCE VALUES(296,'mathematical operators:',1,NULL)
INSERT INTO SENTENCE VALUES(297,'+, -, *, /',1,NULL)
INSERT INTO SENTENCE VALUES(298,'binary comparison operators:',1,NULL)
INSERT INTO SENTENCE VALUES(299,'=, >=, <=, <>, !=, like',1,NULL)
INSERT INTO SENTENCE VALUES(300,'logical operations',1,NULL)
INSERT INTO SENTENCE VALUES(301,'and, or, not',1,NULL)
INSERT INTO SENTENCE VALUES(302,'Parentheses that indicates grouping',1,NULL)
INSERT INTO SENTENCE VALUES(303,'( )',1,NULL)
INSERT INTO SENTENCE VALUES(304,', , , , , , , and',1,NULL)
INSERT INTO SENTENCE VALUES(305,'in',1,NULL)
INSERT INTO SENTENCE VALUES(306,'not in',1,NULL)
INSERT INTO SENTENCE VALUES(307,'between',1,NULL)
INSERT INTO SENTENCE VALUES(308,'is null',1,NULL)
INSERT INTO SENTENCE VALUES(309,'is not null',1,NULL)
INSERT INTO SENTENCE VALUES(310,'is empty',1,NULL)
INSERT INTO SENTENCE VALUES(311,'is not empty',1,NULL)
INSERT INTO SENTENCE VALUES(312,'member of',1,NULL)
INSERT INTO SENTENCE VALUES(313,'not member of',1,NULL)
INSERT INTO SENTENCE VALUES(314,'"Simple" case, , and "searched" case,',1,NULL)
INSERT INTO SENTENCE VALUES(315,'case ..',1,NULL)
INSERT INTO SENTENCE VALUES(316,'when ..',1,NULL)
INSERT INTO SENTENCE VALUES(317,'then ..',1,NULL)
INSERT INTO SENTENCE VALUES(318,'else ..',1,NULL)
INSERT INTO SENTENCE VALUES(319,'end',1,NULL)
INSERT INTO SENTENCE VALUES(320,'case when ..',1,NULL)
INSERT INTO SENTENCE VALUES(321,'then ..',1,NULL)
INSERT INTO SENTENCE VALUES(322,'else ..',1,NULL)
INSERT INTO SENTENCE VALUES(323,'end',1,NULL)
INSERT INTO SENTENCE VALUES(324,'string concatenation or',1,NULL)
INSERT INTO SENTENCE VALUES(325,'...||...',1,NULL)
INSERT INTO SENTENCE VALUES(326,'concat(...,...)',1,NULL)
INSERT INTO SENTENCE VALUES(327,', , and',1,NULL)
INSERT INTO SENTENCE VALUES(328,'current_date()',1,NULL)
INSERT INTO SENTENCE VALUES(329,'current_time()',1,NULL)
INSERT INTO SENTENCE VALUES(330,'current_timestamp()',1,NULL)
INSERT INTO SENTENCE VALUES(331,', , , , , and',1,NULL)
INSERT INTO SENTENCE VALUES(332,'second(...)',1,NULL)
INSERT INTO SENTENCE VALUES(333,'minute(...)',1,NULL)
INSERT INTO SENTENCE VALUES(334,'hour(...)',1,NULL)
INSERT INTO SENTENCE VALUES(335,'day(...)',1,NULL)
INSERT INTO SENTENCE VALUES(336,'month(...)',1,NULL)
INSERT INTO SENTENCE VALUES(337,'year(...)',1,NULL)
INSERT INTO SENTENCE VALUES(338,'Any function or operator defined by EJB-QL 3.0:',1,NULL)
INSERT INTO SENTENCE VALUES(339,'substring(), trim(), lower(), upper(), length(), locate(), abs(), sqrt(), bit_length(), mod()',1,NULL)
INSERT INTO SENTENCE VALUES(340,'and',1,NULL)
INSERT INTO SENTENCE VALUES(341,'coalesce()',1,NULL)
INSERT INTO SENTENCE VALUES(342,'nullif()',1,NULL)
INSERT INTO SENTENCE VALUES(343,'for converting numeric or temporal values to a readable string',1,NULL)
INSERT INTO SENTENCE VALUES(344,'str()',1,NULL)
INSERT INTO SENTENCE VALUES(345,', where the second argument is the name of a Hibernate type, and if ANSI and is supported by the underlying database',1,NULL)
INSERT INTO SENTENCE VALUES(346,'cast(..',1,NULL)
INSERT INTO SENTENCE VALUES(347,'as ...)',1,NULL)
INSERT INTO SENTENCE VALUES(348,'extract(..',1,NULL)
INSERT INTO SENTENCE VALUES(349,'from ...)',1,NULL)
INSERT INTO SENTENCE VALUES(350,'cast()',1,NULL)
INSERT INTO SENTENCE VALUES(351,'extract()',1,NULL)
INSERT INTO SENTENCE VALUES(352,'the HQL function, that applies to aliases of a joined indexed collection',1,NULL)
INSERT INTO SENTENCE VALUES(353,'index()',1,NULL)
INSERT INTO SENTENCE VALUES(354,'HQL functions that take collection-valued path expressions: , along with the special and functions that can be quantified using .',1,NULL)
INSERT INTO SENTENCE VALUES(355,'size(), minelement(), maxelement(), minindex(), maxindex()',1,NULL)
INSERT INTO SENTENCE VALUES(356,'elements()',1,NULL)
INSERT INTO SENTENCE VALUES(357,'indices',1,NULL)
INSERT INTO SENTENCE VALUES(358,'some, all, exists, any, in',1,NULL)
INSERT INTO SENTENCE VALUES(359,'Any database-supported SQL scalar function like , , , and',1,NULL)
INSERT INTO SENTENCE VALUES(360,'sign()',1,NULL)
INSERT INTO SENTENCE VALUES(361,'trunc()',1,NULL)
INSERT INTO SENTENCE VALUES(362,'rtrim()',1,NULL)
INSERT INTO SENTENCE VALUES(363,'sin()',1,NULL)
INSERT INTO SENTENCE VALUES(364,'JDBC-style positional parameters',1,NULL)
INSERT INTO SENTENCE VALUES(365,'named parameters , , and',1,NULL)
INSERT INTO SENTENCE VALUES(366,':name',1,NULL)
INSERT INTO SENTENCE VALUES(367,':start_date',1,NULL)
INSERT INTO SENTENCE VALUES(368,':x1',1,NULL)
INSERT INTO SENTENCE VALUES(369,'SQL literals , , ,',1,NULL)
INSERT INTO SENTENCE VALUES(370,'''foo''',1,NULL)
INSERT INTO SENTENCE VALUES(371,'69',1,NULL)
INSERT INTO SENTENCE VALUES(372,'6.66E+2',1,NULL)
INSERT INTO SENTENCE VALUES(373,'''1970-01-01 10:00:01.0''',1,NULL)
INSERT INTO SENTENCE VALUES(374,'Java constants',1,NULL)
INSERT INTO SENTENCE VALUES(375,'public static final',1,NULL)
INSERT INTO SENTENCE VALUES(376,'eg.Color.TABBY',1,NULL)
INSERT INTO SENTENCE VALUES(377,'and can be used as follows:',1,NULL)
INSERT INTO SENTENCE VALUES(378,'in',1,NULL)
INSERT INTO SENTENCE VALUES(379,'between',1,NULL)
INSERT INTO SENTENCE VALUES(380,'from DomesticCat cat where cat.name between ''A'' and ''B''',1,NULL)
INSERT INTO SENTENCE VALUES(381,'from DomesticCat cat where cat.name in ( ''Foo'', ''Bar'', ''Baz'' )',1,NULL)
INSERT INTO SENTENCE VALUES(382,'The negated forms can be written as follows:',1,NULL)
INSERT INTO SENTENCE VALUES(383,'from DomesticCat cat where cat.name not between ''A'' and ''B''',1,NULL)
INSERT INTO SENTENCE VALUES(384,'from DomesticCat cat where cat.name not in ( ''Foo'', ''Bar'', ''Baz'' )',1,NULL)
INSERT INTO SENTENCE VALUES(385,'Similarly, and can be used to test for null values.',1,NULL)
INSERT INTO SENTENCE VALUES(386,'is null',1,NULL)
INSERT INTO SENTENCE VALUES(387,'is not null',1,NULL)
INSERT INTO SENTENCE VALUES(388,'Booleans can be easily used in expressions by declaring HQL query substitutions in Hibernate configuration:',1,NULL)
INSERT INTO SENTENCE VALUES(389,'<property name="hibernate.query.substitutions">true 1, false 0</property>',1,NULL)
INSERT INTO SENTENCE VALUES(390,'This will replace the keywords and with the literals and in the translated SQL from this HQL:',1,NULL)
INSERT INTO SENTENCE VALUES(391,'true',1,NULL)
INSERT INTO SENTENCE VALUES(392,'false',1,NULL)
INSERT INTO SENTENCE VALUES(393,'from Cat cat where cat.alive = true',1,NULL)
INSERT INTO SENTENCE VALUES(394,'You can test the size of a collection with the special property or the special function.',1,NULL)
INSERT INTO SENTENCE VALUES(395,'size',1,NULL)
INSERT INTO SENTENCE VALUES(396,'size()',1,NULL)
INSERT INTO SENTENCE VALUES(397,'from Cat cat where cat.kittens.size > 0',1,NULL)
INSERT INTO SENTENCE VALUES(398,'from Cat cat where size(cat.kittens) > 0',1,NULL)
INSERT INTO SENTENCE VALUES(399,'For indexed collections, you can refer to the minimum and maximum indices using and functions',1,NULL)
INSERT INTO SENTENCE VALUES(400,'Similarly, you can refer to the minimum and maximum elements of a collection of basic type using the and functions',1,NULL)
INSERT INTO SENTENCE VALUES(401,'For example:',1,NULL)
INSERT INTO SENTENCE VALUES(402,'minindex',1,NULL)
INSERT INTO SENTENCE VALUES(403,'maxindex',1,NULL)
INSERT INTO SENTENCE VALUES(404,'minelement',1,NULL)
INSERT INTO SENTENCE VALUES(405,'maxelement',1,NULL)
INSERT INTO SENTENCE VALUES(406,'from Calendar cal where maxelement(cal.holidays) > current_date',1,NULL)
INSERT INTO SENTENCE VALUES(407,'from Order order where maxindex(order.items) > 100',1,NULL)
INSERT INTO SENTENCE VALUES(408,'from Order order where minelement(order.items) > 10000',1,NULL)
INSERT INTO SENTENCE VALUES(409,'The SQL functions are supported when passed the element or index set of a collection ( and functions) or the result of a subquery (see below):',1,NULL)
INSERT INTO SENTENCE VALUES(410,'any, some, all, exists, in',1,NULL)
INSERT INTO SENTENCE VALUES(411,'elements',1,NULL)
INSERT INTO SENTENCE VALUES(412,'indices',1,NULL)
INSERT INTO SENTENCE VALUES(413,'select mother from Cat as mother, Cat as kit\u000awhere kit in elements(foo.kittens)',1,NULL)
INSERT INTO SENTENCE VALUES(414,'select p from NameList list, Person p\u000awhere p.name = some elements(list.names)',1,NULL)
INSERT INTO SENTENCE VALUES(415,'from Cat cat where exists elements(cat.kittens)',1,NULL)
INSERT INTO SENTENCE VALUES(416,'from Player p where 3 > all elements(p.scores)',1,NULL)
INSERT INTO SENTENCE VALUES(417,'from Show show where ''fizard'' in indices(show.acts)',1,NULL)
INSERT INTO SENTENCE VALUES(418,'Note that these constructs - , , , , , , - can only be used in the where clause in Hibernate3.',1,NULL)
INSERT INTO SENTENCE VALUES(419,'size',1,NULL)
INSERT INTO SENTENCE VALUES(420,'elements',1,NULL)
INSERT INTO SENTENCE VALUES(421,'indices',1,NULL)
INSERT INTO SENTENCE VALUES(422,'minindex',1,NULL)
INSERT INTO SENTENCE VALUES(423,'maxindex',1,NULL)
INSERT INTO SENTENCE VALUES(424,'minelement',1,NULL)
INSERT INTO SENTENCE VALUES(425,'maxelement',1,NULL)
INSERT INTO SENTENCE VALUES(426,'Elements of indexed collections (arrays, lists, and maps) can be referred to by index in a where clause only:',1,NULL)
INSERT INTO SENTENCE VALUES(427,'from Order order where order.items[0].id = 1234',1,NULL)
INSERT INTO SENTENCE VALUES(428,'select person from Person person, Calendar calendar\u000awhere calendar.holidays[''national day''] = person.birthDay\u000a    and person.nationality.calendar = calendar',1,NULL)
INSERT INTO SENTENCE VALUES(429,'select item from Item item, Order order\u000awhere order.items[ order.deliveredItemIndices[0] ] = item and order.id = 11',1,NULL)
INSERT INTO SENTENCE VALUES(430,'select item from Item item, Order order\u000awhere order.items[ maxindex(order.items) ] = item and order.id = 11',1,NULL)
INSERT INTO SENTENCE VALUES(431,'The expression inside can even be an arithmetic expression:',1,NULL)
INSERT INTO SENTENCE VALUES(432,'[]',1,NULL)
INSERT INTO SENTENCE VALUES(433,'select item from Item item, Order order\u000awhere order.items[ size(order.items) - 1 ] = item',1,NULL)
INSERT INTO SENTENCE VALUES(434,'HQL also provides the built-in function for elements of a one-to-many association or collection of values.',1,NULL)
INSERT INTO SENTENCE VALUES(435,'index()',1,NULL)
INSERT INTO SENTENCE VALUES(436,'select item, index(item) from Order order\u000a    join order.items item\u000awhere index(item) < 5',1,NULL)
INSERT INTO SENTENCE VALUES(437,'Scalar SQL functions supported by the underlying database can be used:',1,NULL)
INSERT INTO SENTENCE VALUES(438,'from DomesticCat cat where upper(cat.name) like ''FRI%''',1,NULL)
INSERT INTO SENTENCE VALUES(439,'Consider how much longer and less readable the following query would be in SQL:',1,NULL)
INSERT INTO SENTENCE VALUES(440,'select cust\u000afrom Product prod,\u000a    Store store\u000a    inner join store.customers cust\u000awhere prod.name = ''widget''\u000a    and store.location.name in ( ''Melbourne'', ''Sydney'' )\u000a    and prod = all elements(cust.currentOrder.lineItems)',1,NULL)
INSERT INTO SENTENCE VALUES(441,'something like',1,NULL)
INSERT INTO SENTENCE VALUES(442,'Hint:',1,NULL)
INSERT INTO SENTENCE VALUES(443,'SELECT cust.name, cust.address, cust.phone, cust.id, cust.current_order\u000aFROM customers cust,\u000a    stores store,\u000a    locations loc,\u000a    store_customers sc,\u000a    product prod\u000aWHERE prod.name = ''widget''\u000a    AND store.loc_id = loc.id\u000a    AND loc.name IN ( ''Melbourne'', ''Sydney'' )\u000a    AND sc.store_id = store.id\u000a    AND sc.cust_id = cust.id\u000a    AND prod.id = ALL(\u000a        SELECT item.prod_id\u000a        FROM line_items item, orders o\u000a        WHERE item.order_id = o.id\u000a            AND cust.current_order = o.id\u000a    )',1,NULL)
INSERT INTO SENTENCE VALUES(444,'14.11.\u00a0The order by clause',1,NULL)
INSERT INTO SENTENCE VALUES(445,'The list returned by a query can be ordered by any property of a returned class or components:',1,NULL)
INSERT INTO SENTENCE VALUES(446,'from DomesticCat cat\u000aorder by cat.name asc, cat.weight desc, cat.birthdate',1,NULL)
INSERT INTO SENTENCE VALUES(447,'The optional or indicate ascending or descending order respectively.',1,NULL)
INSERT INTO SENTENCE VALUES(448,'asc',1,NULL)
INSERT INTO SENTENCE VALUES(449,'desc',1,NULL)
INSERT INTO SENTENCE VALUES(450,'14.12.\u00a0The group by clause',1,NULL)
INSERT INTO SENTENCE VALUES(451,'A query that returns aggregate values can be grouped by any property of a returned class or components:',1,NULL)
INSERT INTO SENTENCE VALUES(452,'select cat.color, sum(cat.weight), count(cat)\u000afrom Cat cat\u000agroup by cat.color',1,NULL)
INSERT INTO SENTENCE VALUES(453,'select foo.id, avg(name), max(name)\u000afrom Foo foo join foo.names name\u000agroup by foo.id',1,NULL)
INSERT INTO SENTENCE VALUES(454,'A clause is also allowed.',1,NULL)
INSERT INTO SENTENCE VALUES(455,'having',1,NULL)
INSERT INTO SENTENCE VALUES(456,'select cat.color, sum(cat.weight), count(cat)\u000afrom Cat cat\u000agroup by cat.color\u000ahaving cat.color in (eg.Color.TABBY, eg.Color.BLACK)',1,NULL)
INSERT INTO SENTENCE VALUES(457,'SQL functions and aggregate functions are allowed in the and clauses if they are supported by the underlying database (i.e., not in MySQL).',1,NULL)
INSERT INTO SENTENCE VALUES(458,'having',1,NULL)
INSERT INTO SENTENCE VALUES(459,'order by',1,NULL)
INSERT INTO SENTENCE VALUES(460,'select cat\u000afrom Cat cat\u000a    join cat.kittens kitten\u000agroup by cat.id, cat.name, cat.other, cat.properties\u000ahaving avg(kitten.weight) > 100\u000aorder by count(kitten) asc, sum(kitten.weight) desc',1,NULL)
INSERT INTO SENTENCE VALUES(461,'Neither the clause nor the clause can contain arithmetic expressions',1,NULL)
INSERT INTO SENTENCE VALUES(462,'Hibernate also does not currently expand a grouped entity, so you cannot write if all properties of are non-aggregated',1,NULL)
INSERT INTO SENTENCE VALUES(463,'You have to list all non-aggregated properties explicitly.',1,NULL)
INSERT INTO SENTENCE VALUES(464,'group by',1,NULL)
INSERT INTO SENTENCE VALUES(465,'order by',1,NULL)
INSERT INTO SENTENCE VALUES(466,'group by cat',1,NULL)
INSERT INTO SENTENCE VALUES(467,'cat',1,NULL)
INSERT INTO SENTENCE VALUES(468,'14.13.\u00a0Subqueries',1,NULL)
INSERT INTO SENTENCE VALUES(469,'For databases that support subselects, Hibernate supports subqueries within queries',1,NULL)
INSERT INTO SENTENCE VALUES(470,'A subquery must be surrounded by parentheses (often by an SQL aggregate function call)',1,NULL)
INSERT INTO SENTENCE VALUES(471,'Even correlated subqueries (subqueries that refer to an alias in the outer query) are allowed.',1,NULL)
INSERT INTO SENTENCE VALUES(472,'from Cat as fatcat\u000awhere fatcat.weight > (\u000a    select avg(cat.weight) from DomesticCat cat\u000a)',1,NULL)
INSERT INTO SENTENCE VALUES(473,'from DomesticCat as cat\u000awhere cat.name = some (\u000a    select name.nickName from Name as name\u000a)',1,NULL)
INSERT INTO SENTENCE VALUES(474,'from Cat as cat\u000awhere not exists (\u000a    from Cat as mate where mate.mate = cat\u000a)',1,NULL)
INSERT INTO SENTENCE VALUES(475,'from DomesticCat as cat\u000awhere cat.name not in (\u000a    select name.nickName from Name as name\u000a)',1,NULL)
INSERT INTO SENTENCE VALUES(476,'select cat.id, (select max(kit.weight) from cat.kitten kit)\u000afrom Cat as cat',1,NULL)
INSERT INTO SENTENCE VALUES(477,'Note that HQL subqueries can occur only in the select or where clauses.',1,NULL)
INSERT INTO SENTENCE VALUES(478,'Note that subqueries can also utilize syntax',1,NULL)
INSERT INTO SENTENCE VALUES(479,'See for more information.',1,NULL)
INSERT INTO SENTENCE VALUES(480,'row value constructor',1,NULL)
INSERT INTO SENTENCE VALUES(481,'Section\u00a014.18, \u201cRow value constructor syntax\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(482,'14.14.\u00a0HQL examples',1,NULL)
INSERT INTO SENTENCE VALUES(483,'Hibernate queries can be quite powerful and complex',1,NULL)
INSERT INTO SENTENCE VALUES(484,'In fact, the power of the query language is one of Hibernate''s main strengths',1,NULL)
INSERT INTO SENTENCE VALUES(485,'The following example queries are similar to queries that have been used on recent projects',1,NULL)
INSERT INTO SENTENCE VALUES(486,'Please note that most queries you will write will be much simpler than the following examples.',1,NULL)
INSERT INTO SENTENCE VALUES(487,'The following query returns the order id, number of items, the given minimum total value and the total value of the order for all unpaid orders for a particular customer',1,NULL)
INSERT INTO SENTENCE VALUES(488,'The results are ordered by total value',1,NULL)
INSERT INTO SENTENCE VALUES(489,'In determining the prices, it uses the current catalog',1,NULL)
INSERT INTO SENTENCE VALUES(490,'The resulting SQL query, against the , , , and tables has four inner joins and an (uncorrelated) subselect.',1,NULL)
INSERT INTO SENTENCE VALUES(491,'ORDER',1,NULL)
INSERT INTO SENTENCE VALUES(492,'ORDER_LINE',1,NULL)
INSERT INTO SENTENCE VALUES(493,'PRODUCT',1,NULL)
INSERT INTO SENTENCE VALUES(494,'CATALOG',1,NULL)
INSERT INTO SENTENCE VALUES(495,'PRICE',1,NULL)
INSERT INTO SENTENCE VALUES(496,'select order.id, sum(price.amount), count(item)\u000afrom Order as order\u000a    join order.lineItems as item\u000a    join item.product as product,\u000a    Catalog as catalog\u000a    join catalog.prices as price\u000awhere order.paid = false\u000a    and order.customer = :customer\u000a    and price.product = product\u000a    and catalog.effectiveDate < sysdate\u000a    and catalog.effectiveDate >= all (\u000a        select cat.effectiveDate\u000a        from Catalog as cat\u000a        where cat.effectiveDate < sysdate\u000a    )\u000agroup by order\u000ahaving sum(price.amount) > :minAmount\u000aorder by sum(price.amount) desc',1,NULL)
INSERT INTO SENTENCE VALUES(497,'What a monster! Actually, in real life, I''m not very keen on subqueries, so my query was really more like this:',1,NULL)
INSERT INTO SENTENCE VALUES(498,'select order.id, sum(price.amount), count(item)\u000afrom Order as order\u000a    join order.lineItems as item\u000a    join item.product as product,\u000a    Catalog as catalog\u000a    join catalog.prices as price\u000awhere order.paid = false\u000a    and order.customer = :customer\u000a    and price.product = product\u000a    and catalog = :currentCatalog\u000agroup by order\u000ahaving sum(price.amount) > :minAmount\u000aorder by sum(price.amount) desc',1,NULL)
INSERT INTO SENTENCE VALUES(499,'The next query counts the number of payments in each status, excluding all payments in the status where the most recent status change was made by the current user',1,NULL)
INSERT INTO SENTENCE VALUES(500,'It translates to an SQL query with two inner joins and a correlated subselect against the , and tables.',1,NULL)
INSERT INTO SENTENCE VALUES(501,'AWAITING_APPROVAL',1,NULL)
INSERT INTO SENTENCE VALUES(502,'PAYMENT',1,NULL)
INSERT INTO SENTENCE VALUES(503,'PAYMENT_STATUS',1,NULL)
INSERT INTO SENTENCE VALUES(504,'PAYMENT_STATUS_CHANGE',1,NULL)
INSERT INTO SENTENCE VALUES(505,'select count(payment), status.name\u000afrom Payment as payment\u000a    join payment.currentStatus as status\u000a    join payment.statusChanges as statusChange\u000awhere payment.status.name <> PaymentStatus.AWAITING_APPROVAL\u000a    or (\u000a        statusChange.timeStamp = (\u000a            select max(change.timeStamp)\u000a            from PaymentStatusChange change\u000a            where change.payment = payment\u000a        )\u000a        and statusChange.user <> :currentUser\u000a    )\u000agroup by status.name, status.sortOrder\u000aorder by status.sortOrder',1,NULL)
INSERT INTO SENTENCE VALUES(506,'If the collection was mapped as a list, instead of a set, the query would have been much simpler to write.',1,NULL)
INSERT INTO SENTENCE VALUES(507,'statusChanges',1,NULL)
INSERT INTO SENTENCE VALUES(508,'select count(payment), status.name\u000afrom Payment as payment\u000a    join payment.currentStatus as status\u000awhere payment.status.name <> PaymentStatus.AWAITING_APPROVAL\u000a    or payment.statusChanges[ maxIndex(payment.statusChanges) ].user <> :currentUser\u000agroup by status.name, status.sortOrder\u000aorder by status.sortOrder',1,NULL)
INSERT INTO SENTENCE VALUES(509,'The next query uses the MS SQL Server function to return all the accounts and unpaid payments for the organization to which the current user belongs',1,NULL)
INSERT INTO SENTENCE VALUES(510,'It translates to an SQL query with three inner joins, an outer join and a subselect against the , , , , and tables.',1,NULL)
INSERT INTO SENTENCE VALUES(511,'isNull()',1,NULL)
INSERT INTO SENTENCE VALUES(512,'ACCOUNT',1,NULL)
INSERT INTO SENTENCE VALUES(513,'PAYMENT',1,NULL)
INSERT INTO SENTENCE VALUES(514,'PAYMENT_STATUS',1,NULL)
INSERT INTO SENTENCE VALUES(515,'ACCOUNT_TYPE',1,NULL)
INSERT INTO SENTENCE VALUES(516,'ORGANIZATION',1,NULL)
INSERT INTO SENTENCE VALUES(517,'ORG_USER',1,NULL)
INSERT INTO SENTENCE VALUES(518,'select account, payment\u000afrom Account as account\u000a    left outer join account.payments as payment\u000awhere :currentUser in elements(account.holder.users)\u000a    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, PaymentStatus.UNPAID)\u000aorder by account.type.sortOrder, account.accountNumber, payment.dueDate',1,NULL)
INSERT INTO SENTENCE VALUES(519,'For some databases, we would need to do away with the (correlated) subselect.',1,NULL)
INSERT INTO SENTENCE VALUES(520,'select account, payment\u000afrom Account as account\u000a    join account.holder.users as user\u000a    left outer join account.payments as payment\u000awhere :currentUser = user\u000a    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, PaymentStatus.UNPAID)\u000aorder by account.type.sortOrder, account.accountNumber, payment.dueDate',1,NULL)
INSERT INTO SENTENCE VALUES(521,'14.15.\u00a0Bulk update and delete',1,NULL)
INSERT INTO SENTENCE VALUES(522,'HQL now supports , and statements',1,NULL)
INSERT INTO SENTENCE VALUES(523,'See for more information.',1,NULL)
INSERT INTO SENTENCE VALUES(524,'update',1,NULL)
INSERT INTO SENTENCE VALUES(525,'delete',1,NULL)
INSERT INTO SENTENCE VALUES(526,'insert ..',1,NULL)
INSERT INTO SENTENCE VALUES(527,'select ...',1,NULL)
INSERT INTO SENTENCE VALUES(528,'Section\u00a013.4, \u201cDML-style operations\u201d',1,NULL)
INSERT INTO SENTENCE VALUES(529,'14.16.\u00a0Tips & Tricks',1,NULL)
INSERT INTO SENTENCE VALUES(530,'You can count the number of query results without returning them:',1,NULL)
INSERT INTO SENTENCE VALUES(531,'( (Integer) session.createQuery("select count(*) from ....").iterate().next() ).intValue()',1,NULL)
INSERT INTO SENTENCE VALUES(532,'To order a result by the size of a collection, use the following query:',1,NULL)
INSERT INTO SENTENCE VALUES(533,'select usr.id, usr.name\u000afrom User as usr\u000a    left join usr.messages as msg\u000agroup by usr.id, usr.name\u000aorder by count(msg)',1,NULL)
INSERT INTO SENTENCE VALUES(534,'If your database supports subselects, you can place a condition upon selection size in the where clause of your query:',1,NULL)
INSERT INTO SENTENCE VALUES(535,'from User usr where size(usr.messages) >= 1',1,NULL)
INSERT INTO SENTENCE VALUES(536,'If your database does not support subselects, use the following query:',1,NULL)
INSERT INTO SENTENCE VALUES(537,'select usr.id, usr.name\u000afrom User usr.name\u000a    join usr.messages msg\u000agroup by usr.id, usr.name\u000ahaving count(msg) >= 1',1,NULL)
INSERT INTO SENTENCE VALUES(538,'As this solution cannot return a with zero messages because of the inner join, the following form is also useful:',1,NULL)
INSERT INTO SENTENCE VALUES(539,'User',1,NULL)
INSERT INTO SENTENCE VALUES(540,'select usr.id, usr.name\u000afrom User as usr\u000a    left join usr.messages as msg\u000agroup by usr.id, usr.name\u000ahaving count(msg) = 0',1,NULL)
INSERT INTO SENTENCE VALUES(541,'Properties of a JavaBean can be bound to named query parameters:',1,NULL)
INSERT INTO SENTENCE VALUES(542,'Query q = s.createQuery("from foo Foo as foo where foo.name=:name and foo.size=:size");\u000aq.setProperties(fooBean); // fooBean has getName() and getSize()\u000aList foos = q.list();',1,NULL)
INSERT INTO SENTENCE VALUES(543,'Collections are pageable by using the interface with a filter:',1,NULL)
INSERT INTO SENTENCE VALUES(544,'Query',1,NULL)
INSERT INTO SENTENCE VALUES(545,'Query q = s.createFilter( collection, "" ); // the trivial filter\u000aq.setMaxResults(PAGE_SIZE);\u000aq.setFirstResult(PAGE_SIZE * pageNumber);\u000aList page = q.list();',1,NULL)
INSERT INTO SENTENCE VALUES(546,'Collection elements can be ordered or grouped using a query filter:',1,NULL)
INSERT INTO SENTENCE VALUES(547,'Collection orderedCollection = s.filter( collection, "order by this.amount" );\u000aCollection counts = s.filter( collection, "select this.type, count(this) group by this.type" );',1,NULL)
INSERT INTO SENTENCE VALUES(548,'You can find the size of a collection without initializing it:',1,NULL)
INSERT INTO SENTENCE VALUES(549,'( (Integer) session.createQuery("select count(*) from ....").iterate().next() ).intValue();',1,NULL)
INSERT INTO SENTENCE VALUES(550,'14.17.\u00a0Components',1,NULL)
INSERT INTO SENTENCE VALUES(551,'Components can be used similarly to the simple value types that are used in HQL queries',1,NULL)
INSERT INTO SENTENCE VALUES(552,'They can appear in the clause as follows:',1,NULL)
INSERT INTO SENTENCE VALUES(553,'select',1,NULL)
INSERT INTO SENTENCE VALUES(554,'select p.name from Person p',1,NULL)
INSERT INTO SENTENCE VALUES(555,'select p.name.first from Person p',1,NULL)
INSERT INTO SENTENCE VALUES(556,'where the Person''s name property is a component',1,NULL)
INSERT INTO SENTENCE VALUES(557,'Components can also be used in the clause:',1,NULL)
INSERT INTO SENTENCE VALUES(558,'where',1,NULL)
INSERT INTO SENTENCE VALUES(559,'from Person p where p.name = :name',1,NULL)
INSERT INTO SENTENCE VALUES(560,'from Person p where p.name.first = :firstName',1,NULL)
INSERT INTO SENTENCE VALUES(561,'Components can also be used in the clause:',1,NULL)
INSERT INTO SENTENCE VALUES(562,'order by',1,NULL)
INSERT INTO SENTENCE VALUES(563,'from Person p order by p.name',1,NULL)
INSERT INTO SENTENCE VALUES(564,'from Person p order by p.name.first',1,NULL)
INSERT INTO SENTENCE VALUES(565,'Another common use of components is in .',1,NULL)
INSERT INTO SENTENCE VALUES(566,'row value constructors',1,NULL)
INSERT INTO SENTENCE VALUES(567,'14.18.\u00a0Row value constructor syntax',1,NULL)
INSERT INTO SENTENCE VALUES(568,'HQL supports the use of ANSI SQL syntax, sometimes referred to AS syntax, even though the underlying database may not support that notion',1,NULL)
INSERT INTO SENTENCE VALUES(569,'Here, we are generally referring to multi-valued comparisons, typically associated with components',1,NULL)
INSERT INTO SENTENCE VALUES(570,'Consider an entity Person which defines a name component:',1,NULL)
INSERT INTO SENTENCE VALUES(571,'row value constructor',1,NULL)
INSERT INTO SENTENCE VALUES(572,'tuple',1,NULL)
INSERT INTO SENTENCE VALUES(573,'from Person p where p.name.first=''John'' and p.name.last=''Jingleheimer-Schmidt''',1,NULL)
INSERT INTO SENTENCE VALUES(574,'That is valid syntax although it is a little verbose',1,NULL)
INSERT INTO SENTENCE VALUES(575,'You can make this more concise by using syntax:',1,NULL)
INSERT INTO SENTENCE VALUES(576,'row value constructor',1,NULL)
INSERT INTO SENTENCE VALUES(577,'from Person p where p.name=(''John'', ''Jingleheimer-Schmidt'')',1,NULL)
INSERT INTO SENTENCE VALUES(578,'It can also be useful to specify this in the clause:',1,NULL)
INSERT INTO SENTENCE VALUES(579,'select',1,NULL)
INSERT INTO SENTENCE VALUES(580,'select p.name from Person p',1,NULL)
INSERT INTO SENTENCE VALUES(581,'Using syntax can also be beneficial when using subqueries that need to compare against multiple values:',1,NULL)
INSERT INTO SENTENCE VALUES(582,'row value constructor',1,NULL)
INSERT INTO SENTENCE VALUES(583,'from Cat as cat\u000awhere not ( cat.name, cat.color ) in (\u000a    select cat.name, cat.color from DomesticCat cat\u000a)',1,NULL)
INSERT INTO SENTENCE VALUES(584,'One thing to consider when deciding if you want to use this syntax, is that the query will be dependent upon the ordering of the component sub-properties in the metadata.',1,NULL)
INSERT INTO SENTENCE VALUES(585,'Copyright \u00a9 2004 Red Hat Middleware, LLC.',1,NULL)
INSERT INTO SENTENCE VALUES(586,'Chapter\u00a013.\u00a0Batch processing',1,NULL)
INSERT INTO SENTENCE VALUES(587,'Prev',1,NULL)
INSERT INTO SENTENCE VALUES(588,'Top of page',1,NULL)
INSERT INTO SENTENCE VALUES(589,'Front page',1,NULL)
INSERT INTO SENTENCE VALUES(590,'Chapter\u00a015.\u00a0Criteria Queries',1,NULL)
INSERT INTO SENTENCE VALUES(591,'Next',1,NULL)
DELETE FROM SENTENCE WHERE ID=1
INSERT INTO SENTENCE VALUES(1,'Hibernate.org',1,0)
DELETE FROM SENTENCE WHERE ID=2
INSERT INTO SENTENCE VALUES(2,'Community Documentation',1,1)
DELETE FROM SENTENCE WHERE ID=3
INSERT INTO SENTENCE VALUES(3,'Prev',1,2)
DELETE FROM SENTENCE WHERE ID=4
INSERT INTO SENTENCE VALUES(4,'Next',1,3)
DELETE FROM SENTENCE WHERE ID=5
INSERT INTO SENTENCE VALUES(5,'Chapter\u00a014.\u00a0HQL: The Hibernate Query Language',1,4)
DELETE FROM SENTENCE WHERE ID=6
INSERT INTO SENTENCE VALUES(6,'14.1',1,5)
DELETE FROM SENTENCE WHERE ID=7
INSERT INTO SENTENCE VALUES(7,'Case Sensitivity',1,6)
DELETE FROM SENTENCE WHERE ID=8
INSERT INTO SENTENCE VALUES(8,'14.2',1,7)
DELETE FROM SENTENCE WHERE ID=9
INSERT INTO SENTENCE VALUES(9,'The from clause',1,8)
DELETE FROM SENTENCE WHERE ID=10
INSERT INTO SENTENCE VALUES(10,'14.3',1,9)
DELETE FROM SENTENCE WHERE ID=11
INSERT INTO SENTENCE VALUES(11,'Associations and joins',1,10)
DELETE FROM SENTENCE WHERE ID=12
INSERT INTO SENTENCE VALUES(12,'14.4',1,11)
DELETE FROM SENTENCE WHERE ID=13
INSERT INTO SENTENCE VALUES(13,'Forms of join syntax',1,12)
DELETE FROM SENTENCE WHERE ID=14
INSERT INTO SENTENCE VALUES(14,'14.5',1,13)
DELETE FROM SENTENCE WHERE ID=15
INSERT INTO SENTENCE VALUES(15,'Referring to identifier property',1,14)
DELETE FROM SENTENCE WHERE ID=16
INSERT INTO SENTENCE VALUES(16,'14.6',1,15)
DELETE FROM SENTENCE WHERE ID=17
INSERT INTO SENTENCE VALUES(17,'The select clause',1,16)
DELETE FROM SENTENCE WHERE ID=18
INSERT INTO SENTENCE VALUES(18,'14.7',1,17)
DELETE FROM SENTENCE WHERE ID=19
INSERT INTO SENTENCE VALUES(19,'Aggregate functions',1,18)
DELETE FROM SENTENCE WHERE ID=20
INSERT INTO SENTENCE VALUES(20,'14.8',1,19)
DELETE FROM SENTENCE WHERE ID=21
INSERT INTO SENTENCE VALUES(21,'Polymorphic queries',1,20)
DELETE FROM SENTENCE WHERE ID=22
INSERT INTO SENTENCE VALUES(22,'14.9',1,21)
DELETE FROM SENTENCE WHERE ID=23
INSERT INTO SENTENCE VALUES(23,'The where clause',1,22)
DELETE FROM SENTENCE WHERE ID=24
INSERT INTO SENTENCE VALUES(24,'14.10',1,23)
DELETE FROM SENTENCE WHERE ID=25
INSERT INTO SENTENCE VALUES(25,'Expressions',1,24)
DELETE FROM SENTENCE WHERE ID=26
INSERT INTO SENTENCE VALUES(26,'14.11',1,25)
DELETE FROM SENTENCE WHERE ID=27
INSERT INTO SENTENCE VALUES(27,'The order by clause',1,26)
DELETE FROM SENTENCE WHERE ID=28
INSERT INTO SENTENCE VALUES(28,'14.12',1,27)
DELETE FROM SENTENCE WHERE ID=29
INSERT INTO SENTENCE VALUES(29,'The group by clause',1,28)
DELETE FROM SENTENCE WHERE ID=30
INSERT INTO SENTENCE VALUES(30,'14.13',1,29)
DELETE FROM SENTENCE WHERE ID=31
INSERT INTO SENTENCE VALUES(31,'Subqueries',1,30)
DELETE FROM SENTENCE WHERE ID=32
INSERT INTO SENTENCE VALUES(32,'14.14',1,31)
DELETE FROM SENTENCE WHERE ID=33
INSERT INTO SENTENCE VALUES(33,'HQL examples',1,32)
DELETE FROM SENTENCE WHERE ID=34
INSERT INTO SENTENCE VALUES(34,'14.15',1,33)
DELETE FROM SENTENCE WHERE ID=35
INSERT INTO SENTENCE VALUES(35,'Bulk update and delete',1,34)
DELETE FROM SENTENCE WHERE ID=36
INSERT INTO SENTENCE VALUES(36,'14.16',1,35)
DELETE FROM SENTENCE WHERE ID=37
INSERT INTO SENTENCE VALUES(37,'Tips & Tricks',1,36)
DELETE FROM SENTENCE WHERE ID=38
INSERT INTO SENTENCE VALUES(38,'14.17',1,37)
DELETE FROM SENTENCE WHERE ID=39
INSERT INTO SENTENCE VALUES(39,'Components',1,38)
DELETE FROM SENTENCE WHERE ID=40
INSERT INTO SENTENCE VALUES(40,'14.18',1,39)
DELETE FROM SENTENCE WHERE ID=41
INSERT INTO SENTENCE VALUES(41,'Row value constructor syntax',1,40)
DELETE FROM SENTENCE WHERE ID=42
INSERT INTO SENTENCE VALUES(42,'Hibernate uses a powerful query language (HQL) that is similar in appearance to SQL',1,41)
DELETE FROM SENTENCE WHERE ID=43
INSERT INTO SENTENCE VALUES(43,'Compared with SQL, however, HQL is fully object-oriented and understands notions like inheritance, polymorphism and association.',1,42)
DELETE FROM SENTENCE WHERE ID=44
INSERT INTO SENTENCE VALUES(44,'14.1.\u00a0Case Sensitivity',1,43)
DELETE FROM SENTENCE WHERE ID=45
INSERT INTO SENTENCE VALUES(45,'With the exception of names of Java classes and properties, queries are case-insensitive',1,44)
DELETE FROM SENTENCE WHERE ID=46
INSERT INTO SENTENCE VALUES(46,'So is the same as is the same as , but is not , and is not .',1,45)
DELETE FROM SENTENCE WHERE ID=47
INSERT INTO SENTENCE VALUES(47,'SeLeCT',1,46)
DELETE FROM SENTENCE WHERE ID=48
INSERT INTO SENTENCE VALUES(48,'sELEct',1,47)
DELETE FROM SENTENCE WHERE ID=49
INSERT INTO SENTENCE VALUES(49,'SELECT',1,48)
DELETE FROM SENTENCE WHERE ID=50
INSERT INTO SENTENCE VALUES(50,'org.hibernate.eg.FOO',1,49)
DELETE FROM SENTENCE WHERE ID=51
INSERT INTO SENTENCE VALUES(51,'org.hibernate.eg.Foo',1,50)
DELETE FROM SENTENCE WHERE ID=52
INSERT INTO SENTENCE VALUES(52,'foo.barSet',1,51)
DELETE FROM SENTENCE WHERE ID=53
INSERT INTO SENTENCE VALUES(53,'foo.BARSET',1,52)
DELETE FROM SENTENCE WHERE ID=54
INSERT INTO SENTENCE VALUES(54,'This manual uses lowercase HQL keywords',1,53)
DELETE FROM SENTENCE WHERE ID=55
INSERT INTO SENTENCE VALUES(55,'Some users find queries with uppercase keywords more readable, but this convention is unsuitable for queries embedded in Java code.',1,54)
DELETE FROM SENTENCE WHERE ID=56
INSERT INTO SENTENCE VALUES(56,'14.2.\u00a0The from clause',1,55)
DELETE FROM SENTENCE WHERE ID=57
INSERT INTO SENTENCE VALUES(57,'The simplest possible Hibernate query is of the form:',1,56)
DELETE FROM SENTENCE WHERE ID=58
INSERT INTO SENTENCE VALUES(58,'from eg.Cat',1,57)
DELETE FROM SENTENCE WHERE ID=59
INSERT INTO SENTENCE VALUES(59,'This returns all instances of the class ',1,58)
DELETE FROM SENTENCE WHERE ID=60
INSERT INTO SENTENCE VALUES(60,'You do not usually need to qualify the class name, since is the default',1,59)
DELETE FROM SENTENCE WHERE ID=61
INSERT INTO SENTENCE VALUES(61,'For example:',1,60)
DELETE FROM SENTENCE WHERE ID=62
INSERT INTO SENTENCE VALUES(62,'eg.Cat',1,61)
DELETE FROM SENTENCE WHERE ID=63
INSERT INTO SENTENCE VALUES(63,'auto-import',1,62)
DELETE FROM SENTENCE WHERE ID=64
INSERT INTO SENTENCE VALUES(64,'from Cat',1,63)
DELETE FROM SENTENCE WHERE ID=65
INSERT INTO SENTENCE VALUES(65,'In order to refer to the in other parts of the query, you will need to assign an ',1,64)
DELETE FROM SENTENCE WHERE ID=66
INSERT INTO SENTENCE VALUES(66,'For example:',1,65)
DELETE FROM SENTENCE WHERE ID=67
INSERT INTO SENTENCE VALUES(67,'Cat',1,66)
DELETE FROM SENTENCE WHERE ID=68
INSERT INTO SENTENCE VALUES(68,'alias',1,67)
DELETE FROM SENTENCE WHERE ID=69
INSERT INTO SENTENCE VALUES(69,'from Cat as cat',1,68)
DELETE FROM SENTENCE WHERE ID=70
INSERT INTO SENTENCE VALUES(70,'This query assigns the alias to instances, so you can use that alias later in the query',1,69)
DELETE FROM SENTENCE WHERE ID=71
INSERT INTO SENTENCE VALUES(71,'The keyword is optional',1,70)
DELETE FROM SENTENCE WHERE ID=72
INSERT INTO SENTENCE VALUES(72,'You could also write:',1,71)
DELETE FROM SENTENCE WHERE ID=73
INSERT INTO SENTENCE VALUES(73,'cat',1,72)
DELETE FROM SENTENCE WHERE ID=74
INSERT INTO SENTENCE VALUES(74,'Cat',1,73)
DELETE FROM SENTENCE WHERE ID=75
INSERT INTO SENTENCE VALUES(75,'as',1,74)
DELETE FROM SENTENCE WHERE ID=76
INSERT INTO SENTENCE VALUES(76,'from Cat cat',1,75)
DELETE FROM SENTENCE WHERE ID=77
INSERT INTO SENTENCE VALUES(77,'Multiple classes can appear, resulting in a cartesian product or "cross" join.',1,76)
DELETE FROM SENTENCE WHERE ID=78
INSERT INTO SENTENCE VALUES(78,'from Formula, Parameter',1,77)
DELETE FROM SENTENCE WHERE ID=79
INSERT INTO SENTENCE VALUES(79,'from Formula as form, Parameter as param',1,78)
DELETE FROM SENTENCE WHERE ID=80
INSERT INTO SENTENCE VALUES(80,'It is good practice to name query aliases using an initial lowercase as this is consistent with Java naming standards for local variables (e.g',1,79)
DELETE FROM SENTENCE WHERE ID=81
INSERT INTO SENTENCE VALUES(81,').',1,80)
DELETE FROM SENTENCE WHERE ID=82
INSERT INTO SENTENCE VALUES(82,'domesticCat',1,81)
DELETE FROM SENTENCE WHERE ID=83
INSERT INTO SENTENCE VALUES(83,'14.3.\u00a0Associations and joins',1,82)
DELETE FROM SENTENCE WHERE ID=84
INSERT INTO SENTENCE VALUES(84,'You can also assign aliases to associated entities or to elements of a collection of values using a ',1,83)
DELETE FROM SENTENCE WHERE ID=85
INSERT INTO SENTENCE VALUES(85,'For example:',1,84)
DELETE FROM SENTENCE WHERE ID=86
INSERT INTO SENTENCE VALUES(86,'join',1,85)
DELETE FROM SENTENCE WHERE ID=87
INSERT INTO SENTENCE VALUES(87,'from Cat as cat\u000a    inner join cat.mate as mate\u000a    left outer join cat.kittens as kitten',1,86)
DELETE FROM SENTENCE WHERE ID=88
INSERT INTO SENTENCE VALUES(88,'from Cat as cat left join cat.mate.kittens as kittens',1,87)
DELETE FROM SENTENCE WHERE ID=89
INSERT INTO SENTENCE VALUES(89,'from Formula form full join form.parameter param',1,88)
DELETE FROM SENTENCE WHERE ID=90
INSERT INTO SENTENCE VALUES(90,'The supported join types are borrowed from ANSI SQL:',1,89)
DELETE FROM SENTENCE WHERE ID=91
INSERT INTO SENTENCE VALUES(91,'inner join',1,90)
DELETE FROM SENTENCE WHERE ID=92
INSERT INTO SENTENCE VALUES(92,'left outer join',1,91)
DELETE FROM SENTENCE WHERE ID=93
INSERT INTO SENTENCE VALUES(93,'right outer join',1,92)
DELETE FROM SENTENCE WHERE ID=94
INSERT INTO SENTENCE VALUES(94,'(not usually useful)',1,93)
DELETE FROM SENTENCE WHERE ID=95
INSERT INTO SENTENCE VALUES(95,'full join',1,94)
DELETE FROM SENTENCE WHERE ID=96
INSERT INTO SENTENCE VALUES(96,'The , and constructs may be abbreviated.',1,95)
DELETE FROM SENTENCE WHERE ID=97
INSERT INTO SENTENCE VALUES(97,'inner join',1,96)
DELETE FROM SENTENCE WHERE ID=98
INSERT INTO SENTENCE VALUES(98,'left outer join',1,97)
DELETE FROM SENTENCE WHERE ID=99
INSERT INTO SENTENCE VALUES(99,'right outer join',1,98)
DELETE FROM SENTENCE WHERE ID=100
INSERT INTO SENTENCE VALUES(100,'from Cat as cat\u000a    join cat.mate as mate\u000a    left join cat.kittens as kitten',1,99)
DELETE FROM SENTENCE WHERE ID=101
INSERT INTO SENTENCE VALUES(101,'You may supply extra join conditions using the HQL keyword.',1,100)
DELETE FROM SENTENCE WHERE ID=102
INSERT INTO SENTENCE VALUES(102,'with',1,101)
DELETE FROM SENTENCE WHERE ID=103
INSERT INTO SENTENCE VALUES(103,'from Cat as cat\u000a    left join cat.kittens as kitten\u000a        with kitten.bodyWeight > 10.0',1,102)
DELETE FROM SENTENCE WHERE ID=104
INSERT INTO SENTENCE VALUES(104,'A "fetch" join allows associations or collections of values to be initialized along with their parent objects using a single select',1,103)
DELETE FROM SENTENCE WHERE ID=105
INSERT INTO SENTENCE VALUES(105,'This is particularly useful in the case of a collection',1,104)
DELETE FROM SENTENCE WHERE ID=106
INSERT INTO SENTENCE VALUES(106,'It effectively overrides the outer join and lazy declarations of the mapping file for associations and collections',1,105)
DELETE FROM SENTENCE WHERE ID=107
INSERT INTO SENTENCE VALUES(107,'See for more information.',1,106)
DELETE FROM SENTENCE WHERE ID=108
INSERT INTO SENTENCE VALUES(108,'Section\u00a019.1, \u201cFetching strategies\u201d',1,107)
DELETE FROM SENTENCE WHERE ID=109
INSERT INTO SENTENCE VALUES(109,'from Cat as cat\u000a    inner join fetch cat.mate\u000a    left join fetch cat.kittens',1,108)
DELETE FROM SENTENCE WHERE ID=110
INSERT INTO SENTENCE VALUES(110,'A fetch join does not usually need to assign an alias, because the associated objects should not be used in the clause (or any other clause)',1,109)
DELETE FROM SENTENCE WHERE ID=111
INSERT INTO SENTENCE VALUES(111,'The associated objects are also not returned directly in the query results',1,110)
DELETE FROM SENTENCE WHERE ID=112
INSERT INTO SENTENCE VALUES(112,'Instead, they may be accessed via the parent object',1,111)
DELETE FROM SENTENCE WHERE ID=113
INSERT INTO SENTENCE VALUES(113,'The only reason you might need an alias is if you are recursively join fetching a further collection:',1,112)
DELETE FROM SENTENCE WHERE ID=114
INSERT INTO SENTENCE VALUES(114,'where',1,113)
DELETE FROM SENTENCE WHERE ID=115
INSERT INTO SENTENCE VALUES(115,'from Cat as cat\u000a    inner join fetch cat.mate\u000a    left join fetch cat.kittens child\u000a    left join fetch child.kittens',1,114)
DELETE FROM SENTENCE WHERE ID=116
INSERT INTO SENTENCE VALUES(116,'The construct cannot be used in queries called using (though can be used)',1,115)
DELETE FROM SENTENCE WHERE ID=117
INSERT INTO SENTENCE VALUES(117,'should be used together with or , as these operations are based on the result rows which usually contain duplicates for eager collection fetching, hence, the number of rows is not what you would expect',1,116)
DELETE FROM SENTENCE WHERE ID=118
INSERT INTO SENTENCE VALUES(118,'should also not be used together with impromptu condition',1,117)
DELETE FROM SENTENCE WHERE ID=119
INSERT INTO SENTENCE VALUES(119,'It is possible to create a cartesian product by join fetching more than one collection in a query, so take care in this case',1,118)
DELETE FROM SENTENCE WHERE ID=120
INSERT INTO SENTENCE VALUES(120,'Join fetching multiple collection roles can produce unexpected results for bag mappings, so user discretion is advised when formulating queries in this case',1,119)
DELETE FROM SENTENCE WHERE ID=121
INSERT INTO SENTENCE VALUES(121,'Finally, note that and are not meaningful.',1,120)
DELETE FROM SENTENCE WHERE ID=122
INSERT INTO SENTENCE VALUES(122,'fetch',1,121)
DELETE FROM SENTENCE WHERE ID=123
INSERT INTO SENTENCE VALUES(123,'iterate()',1,122)
DELETE FROM SENTENCE WHERE ID=124
INSERT INTO SENTENCE VALUES(124,'scroll()',1,123)
DELETE FROM SENTENCE WHERE ID=125
INSERT INTO SENTENCE VALUES(125,'Fetch',1,124)
DELETE FROM SENTENCE WHERE ID=126
INSERT INTO SENTENCE VALUES(126,'setMaxResults()',1,125)
DELETE FROM SENTENCE WHERE ID=127
INSERT INTO SENTENCE VALUES(127,'setFirstResult()',1,126)
DELETE FROM SENTENCE WHERE ID=128
INSERT INTO SENTENCE VALUES(128,'Fetch',1,127)
DELETE FROM SENTENCE WHERE ID=129
INSERT INTO SENTENCE VALUES(129,'with',1,128)
DELETE FROM SENTENCE WHERE ID=130
INSERT INTO SENTENCE VALUES(130,'full join fetch',1,129)
DELETE FROM SENTENCE WHERE ID=131
INSERT INTO SENTENCE VALUES(131,'right join fetch',1,130)
DELETE FROM SENTENCE WHERE ID=132
INSERT INTO SENTENCE VALUES(132,'If you are using property-level lazy fetching (with bytecode instrumentation), it is possible to force Hibernate to fetch the lazy properties in the first query immediately using .',1,131)
DELETE FROM SENTENCE WHERE ID=133
INSERT INTO SENTENCE VALUES(133,'fetch all properties',1,132)
DELETE FROM SENTENCE WHERE ID=134
INSERT INTO SENTENCE VALUES(134,'from Document fetch all properties order by name',1,133)
DELETE FROM SENTENCE WHERE ID=135
INSERT INTO SENTENCE VALUES(135,'from Document doc fetch all properties where lower(doc.name) like ''%cats%''',1,134)
DELETE FROM SENTENCE WHERE ID=136
INSERT INTO SENTENCE VALUES(136,'14.4.\u00a0Forms of join syntax',1,135)
DELETE FROM SENTENCE WHERE ID=137
INSERT INTO SENTENCE VALUES(137,'HQL supports two forms of association joining: and .',1,136)
DELETE FROM SENTENCE WHERE ID=138
INSERT INTO SENTENCE VALUES(138,'implicit',1,137)
DELETE FROM SENTENCE WHERE ID=139
INSERT INTO SENTENCE VALUES(139,'explicit',1,138)
DELETE FROM SENTENCE WHERE ID=140
INSERT INTO SENTENCE VALUES(140,'The queries shown in the previous section all use the form, that is, where the join keyword is explicitly used in the from clause',1,139)
DELETE FROM SENTENCE WHERE ID=141
INSERT INTO SENTENCE VALUES(141,'This is the recommended form.',1,140)
DELETE FROM SENTENCE WHERE ID=142
INSERT INTO SENTENCE VALUES(142,'explicit',1,141)
DELETE FROM SENTENCE WHERE ID=143
INSERT INTO SENTENCE VALUES(143,'The form does not use the join keyword',1,142)
DELETE FROM SENTENCE WHERE ID=144
INSERT INTO SENTENCE VALUES(144,'Instead, the associations are "dereferenced" using dot-notation',1,143)
DELETE FROM SENTENCE WHERE ID=145
INSERT INTO SENTENCE VALUES(145,'joins can appear in any of the HQL clauses',1,144)
DELETE FROM SENTENCE WHERE ID=146
INSERT INTO SENTENCE VALUES(146,'join result in inner joins in the resulting SQL statement.',1,145)
DELETE FROM SENTENCE WHERE ID=147
INSERT INTO SENTENCE VALUES(147,'implicit',1,146)
DELETE FROM SENTENCE WHERE ID=148
INSERT INTO SENTENCE VALUES(148,'implicit',1,147)
DELETE FROM SENTENCE WHERE ID=149
INSERT INTO SENTENCE VALUES(149,'implicit',1,148)
DELETE FROM SENTENCE WHERE ID=150
INSERT INTO SENTENCE VALUES(150,'from Cat as cat where cat.mate.name like ''%s%''',1,149)
DELETE FROM SENTENCE WHERE ID=151
INSERT INTO SENTENCE VALUES(151,'14.5.\u00a0Referring to identifier property',1,150)
DELETE FROM SENTENCE WHERE ID=152
INSERT INTO SENTENCE VALUES(152,'There are 2 ways to refer to an entity''s identifier property:',1,151)
DELETE FROM SENTENCE WHERE ID=153
INSERT INTO SENTENCE VALUES(153,'The special property (lowercase) may be used to reference the identifier property of an entity .',1,152)
DELETE FROM SENTENCE WHERE ID=154
INSERT INTO SENTENCE VALUES(154,'id',1,153)
DELETE FROM SENTENCE WHERE ID=155
INSERT INTO SENTENCE VALUES(155,'provided that the entity does not define a non-identifier property named id',1,154)
DELETE FROM SENTENCE WHERE ID=156
INSERT INTO SENTENCE VALUES(156,'If the entity defines a named identifier property, you can use that property name.',1,155)
DELETE FROM SENTENCE WHERE ID=157
INSERT INTO SENTENCE VALUES(157,'References to composite identifier properties follow the same naming rules',1,156)
DELETE FROM SENTENCE WHERE ID=158
INSERT INTO SENTENCE VALUES(158,'If the entity has a non-identifier property named id, the composite identifier property can only be referenced by its defined named',1,157)
DELETE FROM SENTENCE WHERE ID=159
INSERT INTO SENTENCE VALUES(159,'Otherwise, the special property can be used to reference the identifier property.',1,158)
DELETE FROM SENTENCE WHERE ID=160
INSERT INTO SENTENCE VALUES(160,'id',1,159)
DELETE FROM SENTENCE WHERE ID=161
INSERT INTO SENTENCE VALUES(161,'Important',1,160)
DELETE FROM SENTENCE WHERE ID=162
INSERT INTO SENTENCE VALUES(162,'Please note that, starting in version 3.2.2, this has changed significantly',1,161)
DELETE FROM SENTENCE WHERE ID=163
INSERT INTO SENTENCE VALUES(163,'In previous versions, referred to the identifier property regardless of its actual name',1,162)
DELETE FROM SENTENCE WHERE ID=164
INSERT INTO SENTENCE VALUES(164,'A ramification of that decision was that non-identifier properties named could never be referenced in Hibernate queries.',1,163)
DELETE FROM SENTENCE WHERE ID=165
INSERT INTO SENTENCE VALUES(165,'id',1,164)
DELETE FROM SENTENCE WHERE ID=166
INSERT INTO SENTENCE VALUES(166,'always',1,165)
DELETE FROM SENTENCE WHERE ID=167
INSERT INTO SENTENCE VALUES(167,'id',1,166)
DELETE FROM SENTENCE WHERE ID=168
INSERT INTO SENTENCE VALUES(168,'14.6.\u00a0The select clause',1,167)
DELETE FROM SENTENCE WHERE ID=169
INSERT INTO SENTENCE VALUES(169,'The clause picks which objects and properties to return in the query result set',1,168)
DELETE FROM SENTENCE WHERE ID=170
INSERT INTO SENTENCE VALUES(170,'Consider the following:',1,169)
DELETE FROM SENTENCE WHERE ID=171
INSERT INTO SENTENCE VALUES(171,'select',1,170)
DELETE FROM SENTENCE WHERE ID=172
INSERT INTO SENTENCE VALUES(172,'select mate\u000afrom Cat as cat\u000a    inner join cat.mate as mate',1,171)
DELETE FROM SENTENCE WHERE ID=173
INSERT INTO SENTENCE VALUES(173,'The query will select s of other s',1,172)
DELETE FROM SENTENCE WHERE ID=174
INSERT INTO SENTENCE VALUES(174,'You can express this query more compactly as:',1,173)
DELETE FROM SENTENCE WHERE ID=175
INSERT INTO SENTENCE VALUES(175,'mate',1,174)
DELETE FROM SENTENCE WHERE ID=176
INSERT INTO SENTENCE VALUES(176,'Cat',1,175)
DELETE FROM SENTENCE WHERE ID=177
INSERT INTO SENTENCE VALUES(177,'select cat.mate from Cat cat',1,176)
DELETE FROM SENTENCE WHERE ID=178
INSERT INTO SENTENCE VALUES(178,'Queries can return properties of any value type including properties of component type:',1,177)
DELETE FROM SENTENCE WHERE ID=179
INSERT INTO SENTENCE VALUES(179,'select cat.name from DomesticCat cat\u000awhere cat.name like ''fri%''',1,178)
DELETE FROM SENTENCE WHERE ID=180
INSERT INTO SENTENCE VALUES(180,'select cust.name.firstName from Customer as cust',1,179)
DELETE FROM SENTENCE WHERE ID=181
INSERT INTO SENTENCE VALUES(181,'Queries can return multiple objects and/or properties as an array of type :',1,180)
DELETE FROM SENTENCE WHERE ID=182
INSERT INTO SENTENCE VALUES(182,'Object[]',1,181)
DELETE FROM SENTENCE WHERE ID=183
INSERT INTO SENTENCE VALUES(183,'select mother, offspr, mate.name\u000afrom DomesticCat as mother\u000a    inner join mother.mate as mate\u000a    left outer join mother.kittens as offspr',1,182)
DELETE FROM SENTENCE WHERE ID=184
INSERT INTO SENTENCE VALUES(184,'Or as a :',1,183)
DELETE FROM SENTENCE WHERE ID=185
INSERT INTO SENTENCE VALUES(185,'List',1,184)
DELETE FROM SENTENCE WHERE ID=186
INSERT INTO SENTENCE VALUES(186,'select new list(mother, offspr, mate.name)\u000afrom DomesticCat as mother\u000a    inner join mother.mate as mate\u000a    left outer join mother.kittens as offspr',1,185)
DELETE FROM SENTENCE WHERE ID=187
INSERT INTO SENTENCE VALUES(187,'Or - assuming that the class has an appropriate constructor - as an actual typesafe Java object:',1,186)
DELETE FROM SENTENCE WHERE ID=188
INSERT INTO SENTENCE VALUES(188,'Family',1,187)
DELETE FROM SENTENCE WHERE ID=189
INSERT INTO SENTENCE VALUES(189,'select new Family(mother, mate, offspr)\u000afrom DomesticCat as mother\u000a    join mother.mate as mate\u000a    left join mother.kittens as offspr',1,188)
DELETE FROM SENTENCE WHERE ID=190
INSERT INTO SENTENCE VALUES(190,'You can assign aliases to selected expressions using :',1,189)
DELETE FROM SENTENCE WHERE ID=191
INSERT INTO SENTENCE VALUES(191,'as',1,190)
DELETE FROM SENTENCE WHERE ID=192
INSERT INTO SENTENCE VALUES(192,'select max(bodyWeight) as max, min(bodyWeight) as min, count(*) as n\u000afrom Cat cat',1,191)
DELETE FROM SENTENCE WHERE ID=193
INSERT INTO SENTENCE VALUES(193,'This is most useful when used together with :',1,192)
DELETE FROM SENTENCE WHERE ID=194
INSERT INTO SENTENCE VALUES(194,'select new map',1,193)
DELETE FROM SENTENCE WHERE ID=195
INSERT INTO SENTENCE VALUES(195,'select new map( max(bodyWeight) as max, min(bodyWeight) as min, count(*) as n )\u000afrom Cat cat',1,194)
DELETE FROM SENTENCE WHERE ID=196
INSERT INTO SENTENCE VALUES(196,'This query returns a from aliases to selected values.',1,195)
DELETE FROM SENTENCE WHERE ID=197
INSERT INTO SENTENCE VALUES(197,'Map',1,196)
DELETE FROM SENTENCE WHERE ID=198
INSERT INTO SENTENCE VALUES(198,'14.7.\u00a0Aggregate functions',1,197)
DELETE FROM SENTENCE WHERE ID=199
INSERT INTO SENTENCE VALUES(199,'HQL queries can even return the results of aggregate functions on properties:',1,198)
DELETE FROM SENTENCE WHERE ID=200
INSERT INTO SENTENCE VALUES(200,'select avg(cat.weight), sum(cat.weight), max(cat.weight), count(cat)\u000afrom Cat cat',1,199)
DELETE FROM SENTENCE WHERE ID=201
INSERT INTO SENTENCE VALUES(201,'The supported aggregate functions are:',1,200)
DELETE FROM SENTENCE WHERE ID=202
INSERT INTO SENTENCE VALUES(202,'avg(...), sum(...), min(...), max(...)',1,201)
DELETE FROM SENTENCE WHERE ID=203
INSERT INTO SENTENCE VALUES(203,'count(*)',1,202)
DELETE FROM SENTENCE WHERE ID=204
INSERT INTO SENTENCE VALUES(204,'count(...), count(distinct ...), count(all...)',1,203)
DELETE FROM SENTENCE WHERE ID=205
INSERT INTO SENTENCE VALUES(205,'You can use arithmetic operators, concatenation, and recognized SQL functions in the select clause:',1,204)
DELETE FROM SENTENCE WHERE ID=206
INSERT INTO SENTENCE VALUES(206,'select cat.weight + sum(kitten.weight)\u000afrom Cat cat\u000a    join cat.kittens kitten\u000agroup by cat.id, cat.weight',1,205)
DELETE FROM SENTENCE WHERE ID=207
INSERT INTO SENTENCE VALUES(207,'select firstName||'' ''||initial||'' ''||upper(lastName) from Person',1,206)
DELETE FROM SENTENCE WHERE ID=208
INSERT INTO SENTENCE VALUES(208,'The and keywords can be used and have the same semantics as in SQL.',1,207)
DELETE FROM SENTENCE WHERE ID=209
INSERT INTO SENTENCE VALUES(209,'distinct',1,208)
DELETE FROM SENTENCE WHERE ID=210
INSERT INTO SENTENCE VALUES(210,'all',1,209)
DELETE FROM SENTENCE WHERE ID=211
INSERT INTO SENTENCE VALUES(211,'select distinct cat.name from Cat cat\u000a\u000aselect count(distinct cat.name), count(cat) from Cat cat',1,210)
DELETE FROM SENTENCE WHERE ID=212
INSERT INTO SENTENCE VALUES(212,'14.8.\u00a0Polymorphic queries',1,211)
DELETE FROM SENTENCE WHERE ID=213
INSERT INTO SENTENCE VALUES(213,'A query like:',1,212)
DELETE FROM SENTENCE WHERE ID=214
INSERT INTO SENTENCE VALUES(214,'from Cat as cat',1,213)
DELETE FROM SENTENCE WHERE ID=215
INSERT INTO SENTENCE VALUES(215,'returns instances not only of , but also of subclasses like ',1,214)
DELETE FROM SENTENCE WHERE ID=216
INSERT INTO SENTENCE VALUES(216,'Hibernate queries can name Java class or interface in the clause',1,215)
DELETE FROM SENTENCE WHERE ID=217
INSERT INTO SENTENCE VALUES(217,'The query will return instances of all persistent classes that extend that class or implement the interface',1,216)
DELETE FROM SENTENCE WHERE ID=218
INSERT INTO SENTENCE VALUES(218,'The following query would return all persistent objects:',1,217)
DELETE FROM SENTENCE WHERE ID=219
INSERT INTO SENTENCE VALUES(219,'Cat',1,218)
DELETE FROM SENTENCE WHERE ID=220
INSERT INTO SENTENCE VALUES(220,'DomesticCat',1,219)
DELETE FROM SENTENCE WHERE ID=221
INSERT INTO SENTENCE VALUES(221,'any',1,220)
DELETE FROM SENTENCE WHERE ID=222
INSERT INTO SENTENCE VALUES(222,'from',1,221)
DELETE FROM SENTENCE WHERE ID=223
INSERT INTO SENTENCE VALUES(223,'from java.lang.Object o',1,222)
DELETE FROM SENTENCE WHERE ID=224
INSERT INTO SENTENCE VALUES(224,'The interface might be implemented by various persistent classes:',1,223)
DELETE FROM SENTENCE WHERE ID=225
INSERT INTO SENTENCE VALUES(225,'Named',1,224)
DELETE FROM SENTENCE WHERE ID=226
INSERT INTO SENTENCE VALUES(226,'from Named n, Named m where n.name = m.name',1,225)
DELETE FROM SENTENCE WHERE ID=227
INSERT INTO SENTENCE VALUES(227,'These last two queries will require more than one SQL ',1,226)
DELETE FROM SENTENCE WHERE ID=228
INSERT INTO SENTENCE VALUES(228,'This means that the clause does not correctly order the whole result set',1,227)
DELETE FROM SENTENCE WHERE ID=229
INSERT INTO SENTENCE VALUES(229,'It also means you cannot call these queries using .',1,228)
DELETE FROM SENTENCE WHERE ID=230
INSERT INTO SENTENCE VALUES(230,'SELECT',1,229)
DELETE FROM SENTENCE WHERE ID=231
INSERT INTO SENTENCE VALUES(231,'order by',1,230)
DELETE FROM SENTENCE WHERE ID=232
INSERT INTO SENTENCE VALUES(232,'Query.scroll()',1,231)
DELETE FROM SENTENCE WHERE ID=233
INSERT INTO SENTENCE VALUES(233,'14.9.\u00a0The where clause',1,232)
DELETE FROM SENTENCE WHERE ID=234
INSERT INTO SENTENCE VALUES(234,'The clause allows you to refine the list of instances returned',1,233)
DELETE FROM SENTENCE WHERE ID=235
INSERT INTO SENTENCE VALUES(235,'If no alias exists, you can refer to properties by name:',1,234)
DELETE FROM SENTENCE WHERE ID=236
INSERT INTO SENTENCE VALUES(236,'where',1,235)
DELETE FROM SENTENCE WHERE ID=237
INSERT INTO SENTENCE VALUES(237,'from Cat where name=''Fritz''',1,236)
DELETE FROM SENTENCE WHERE ID=238
INSERT INTO SENTENCE VALUES(238,'If there is an alias, use a qualified property name:',1,237)
DELETE FROM SENTENCE WHERE ID=239
INSERT INTO SENTENCE VALUES(239,'from Cat as cat where cat.name=''Fritz''',1,238)
DELETE FROM SENTENCE WHERE ID=240
INSERT INTO SENTENCE VALUES(240,'This returns instances of named ''Fritz''.',1,239)
DELETE FROM SENTENCE WHERE ID=241
INSERT INTO SENTENCE VALUES(241,'Cat',1,240)
DELETE FROM SENTENCE WHERE ID=242
INSERT INTO SENTENCE VALUES(242,'The following query:',1,241)
DELETE FROM SENTENCE WHERE ID=243
INSERT INTO SENTENCE VALUES(243,'select foo\u000afrom Foo foo, Bar bar\u000awhere foo.startDate = bar.date',1,242)
DELETE FROM SENTENCE WHERE ID=244
INSERT INTO SENTENCE VALUES(244,'returns all instances of with an instance of with a property equal to the property of the ',1,243)
DELETE FROM SENTENCE WHERE ID=245
INSERT INTO SENTENCE VALUES(245,'Compound path expressions make the clause extremely powerful',1,244)
DELETE FROM SENTENCE WHERE ID=246
INSERT INTO SENTENCE VALUES(246,'Consider the following:',1,245)
DELETE FROM SENTENCE WHERE ID=247
INSERT INTO SENTENCE VALUES(247,'Foo',1,246)
DELETE FROM SENTENCE WHERE ID=248
INSERT INTO SENTENCE VALUES(248,'bar',1,247)
DELETE FROM SENTENCE WHERE ID=249
INSERT INTO SENTENCE VALUES(249,'date',1,248)
DELETE FROM SENTENCE WHERE ID=250
INSERT INTO SENTENCE VALUES(250,'startDate',1,249)
DELETE FROM SENTENCE WHERE ID=251
INSERT INTO SENTENCE VALUES(251,'Foo',1,250)
DELETE FROM SENTENCE WHERE ID=252
INSERT INTO SENTENCE VALUES(252,'where',1,251)
DELETE FROM SENTENCE WHERE ID=253
INSERT INTO SENTENCE VALUES(253,'from Cat cat where cat.mate.name is not null',1,252)
DELETE FROM SENTENCE WHERE ID=254
INSERT INTO SENTENCE VALUES(254,'This query translates to an SQL query with a table (inner) join',1,253)
DELETE FROM SENTENCE WHERE ID=255
INSERT INTO SENTENCE VALUES(255,'For example:',1,254)
DELETE FROM SENTENCE WHERE ID=256
INSERT INTO SENTENCE VALUES(256,'from Foo foo\u000awhere foo.bar.baz.customer.address.city is not null',1,255)
DELETE FROM SENTENCE WHERE ID=257
INSERT INTO SENTENCE VALUES(257,'would result in a query that would require four table joins in SQL.',1,256)
DELETE FROM SENTENCE WHERE ID=258
INSERT INTO SENTENCE VALUES(258,'The operator can be used to compare not only properties, but also instances:',1,257)
DELETE FROM SENTENCE WHERE ID=259
INSERT INTO SENTENCE VALUES(259,'from Cat cat, Cat rival where cat.mate = rival.mate',1,258)
DELETE FROM SENTENCE WHERE ID=260
INSERT INTO SENTENCE VALUES(260,'select cat, mate\u000afrom Cat cat, Cat mate\u000awhere cat.mate = mate',1,259)
DELETE FROM SENTENCE WHERE ID=261
INSERT INTO SENTENCE VALUES(261,'The special property (lowercase) can be used to reference the unique identifier of an object',1,260)
DELETE FROM SENTENCE WHERE ID=262
INSERT INTO SENTENCE VALUES(262,'See for more information.',1,261)
DELETE FROM SENTENCE WHERE ID=263
INSERT INTO SENTENCE VALUES(263,'id',1,262)
DELETE FROM SENTENCE WHERE ID=264
INSERT INTO SENTENCE VALUES(264,'Section\u00a014.5, \u201cReferring to identifier property\u201d',1,263)
DELETE FROM SENTENCE WHERE ID=265
INSERT INTO SENTENCE VALUES(265,'from Cat as cat where cat.id = 123\u000a\u000afrom Cat as cat where cat.mate.id = 69',1,264)
DELETE FROM SENTENCE WHERE ID=266
INSERT INTO SENTENCE VALUES(266,'The second query is efficient and does not require a table join.',1,265)
DELETE FROM SENTENCE WHERE ID=267
INSERT INTO SENTENCE VALUES(267,'Properties of composite identifiers can also be used',1,266)
DELETE FROM SENTENCE WHERE ID=268
INSERT INTO SENTENCE VALUES(268,'Consider the following example where has composite identifiers consisting of and :',1,267)
DELETE FROM SENTENCE WHERE ID=269
INSERT INTO SENTENCE VALUES(269,'Person',1,268)
DELETE FROM SENTENCE WHERE ID=270
INSERT INTO SENTENCE VALUES(270,'country',1,269)
DELETE FROM SENTENCE WHERE ID=271
INSERT INTO SENTENCE VALUES(271,'medicareNumber',1,270)
DELETE FROM SENTENCE WHERE ID=272
INSERT INTO SENTENCE VALUES(272,'from bank.Person person\u000awhere person.id.country = ''AU''\u000a    and person.id.medicareNumber = 123456',1,271)
DELETE FROM SENTENCE WHERE ID=273
INSERT INTO SENTENCE VALUES(273,'from bank.Account account\u000awhere account.owner.id.country = ''AU''\u000a    and account.owner.id.medicareNumber = 123456',1,272)
DELETE FROM SENTENCE WHERE ID=274
INSERT INTO SENTENCE VALUES(274,'Once again, the second query does not require a table join.',1,273)
DELETE FROM SENTENCE WHERE ID=275
INSERT INTO SENTENCE VALUES(275,'See for more information regarding referencing identifier properties)',1,274)
DELETE FROM SENTENCE WHERE ID=276
INSERT INTO SENTENCE VALUES(276,'Section\u00a014.5, \u201cReferring to identifier property\u201d',1,275)
DELETE FROM SENTENCE WHERE ID=277
INSERT INTO SENTENCE VALUES(277,'The special property accesses the discriminator value of an instance in the case of polymorphic persistence',1,276)
DELETE FROM SENTENCE WHERE ID=278
INSERT INTO SENTENCE VALUES(278,'A Java class name embedded in the where clause will be translated to its discriminator value.',1,277)
DELETE FROM SENTENCE WHERE ID=279
INSERT INTO SENTENCE VALUES(279,'class',1,278)
DELETE FROM SENTENCE WHERE ID=280
INSERT INTO SENTENCE VALUES(280,'from Cat cat where cat.class = DomesticCat',1,279)
DELETE FROM SENTENCE WHERE ID=281
INSERT INTO SENTENCE VALUES(281,'You can also use components or composite user types, or properties of said component types',1,280)
DELETE FROM SENTENCE WHERE ID=282
INSERT INTO SENTENCE VALUES(282,'See for more information.',1,281)
DELETE FROM SENTENCE WHERE ID=283
INSERT INTO SENTENCE VALUES(283,'Section\u00a014.17, \u201cComponents\u201d',1,282)
DELETE FROM SENTENCE WHERE ID=284
INSERT INTO SENTENCE VALUES(284,'An "any" type has the special properties and that allows you to express a join in the following way (where is a property mapped with ):',1,283)
DELETE FROM SENTENCE WHERE ID=285
INSERT INTO SENTENCE VALUES(285,'id',1,284)
DELETE FROM SENTENCE WHERE ID=286
INSERT INTO SENTENCE VALUES(286,'class',1,285)
DELETE FROM SENTENCE WHERE ID=287
INSERT INTO SENTENCE VALUES(287,'AuditLog.item',1,286)
DELETE FROM SENTENCE WHERE ID=288
INSERT INTO SENTENCE VALUES(288,'<any>',1,287)
DELETE FROM SENTENCE WHERE ID=289
INSERT INTO SENTENCE VALUES(289,'from AuditLog log, Payment payment\u000awhere log.item.class = ''Payment'' and log.item.id = payment.id',1,288)
DELETE FROM SENTENCE WHERE ID=290
INSERT INTO SENTENCE VALUES(290,'The and would refer to the values of completely different database columns in the above query.',1,289)
DELETE FROM SENTENCE WHERE ID=291
INSERT INTO SENTENCE VALUES(291,'log.item.class',1,290)
DELETE FROM SENTENCE WHERE ID=292
INSERT INTO SENTENCE VALUES(292,'payment.class',1,291)
DELETE FROM SENTENCE WHERE ID=293
INSERT INTO SENTENCE VALUES(293,'14.10.\u00a0Expressions',1,292)
DELETE FROM SENTENCE WHERE ID=294
INSERT INTO SENTENCE VALUES(294,'Expressions used in the clause include the following:',1,293)
DELETE FROM SENTENCE WHERE ID=295
INSERT INTO SENTENCE VALUES(295,'where',1,294)
DELETE FROM SENTENCE WHERE ID=296
INSERT INTO SENTENCE VALUES(296,'mathematical operators:',1,295)
DELETE FROM SENTENCE WHERE ID=297
INSERT INTO SENTENCE VALUES(297,'+, -, *, /',1,296)
DELETE FROM SENTENCE WHERE ID=298
INSERT INTO SENTENCE VALUES(298,'binary comparison operators:',1,297)
DELETE FROM SENTENCE WHERE ID=299
INSERT INTO SENTENCE VALUES(299,'=, >=, <=, <>, !=, like',1,298)
DELETE FROM SENTENCE WHERE ID=300
INSERT INTO SENTENCE VALUES(300,'logical operations',1,299)
DELETE FROM SENTENCE WHERE ID=301
INSERT INTO SENTENCE VALUES(301,'and, or, not',1,300)
DELETE FROM SENTENCE WHERE ID=302
INSERT INTO SENTENCE VALUES(302,'Parentheses that indicates grouping',1,301)
DELETE FROM SENTENCE WHERE ID=303
INSERT INTO SENTENCE VALUES(303,'( )',1,302)
DELETE FROM SENTENCE WHERE ID=304
INSERT INTO SENTENCE VALUES(304,', , , , , , , and',1,303)
DELETE FROM SENTENCE WHERE ID=305
INSERT INTO SENTENCE VALUES(305,'in',1,304)
DELETE FROM SENTENCE WHERE ID=306
INSERT INTO SENTENCE VALUES(306,'not in',1,305)
DELETE FROM SENTENCE WHERE ID=307
INSERT INTO SENTENCE VALUES(307,'between',1,306)
DELETE FROM SENTENCE WHERE ID=308
INSERT INTO SENTENCE VALUES(308,'is null',1,307)
DELETE FROM SENTENCE WHERE ID=309
INSERT INTO SENTENCE VALUES(309,'is not null',1,308)
DELETE FROM SENTENCE WHERE ID=310
INSERT INTO SENTENCE VALUES(310,'is empty',1,309)
DELETE FROM SENTENCE WHERE ID=311
INSERT INTO SENTENCE VALUES(311,'is not empty',1,310)
DELETE FROM SENTENCE WHERE ID=312
INSERT INTO SENTENCE VALUES(312,'member of',1,311)
DELETE FROM SENTENCE WHERE ID=313
INSERT INTO SENTENCE VALUES(313,'not member of',1,312)
DELETE FROM SENTENCE WHERE ID=314
INSERT INTO SENTENCE VALUES(314,'"Simple" case, , and "searched" case,',1,313)
DELETE FROM SENTENCE WHERE ID=315
INSERT INTO SENTENCE VALUES(315,'case ..',1,314)
DELETE FROM SENTENCE WHERE ID=316
INSERT INTO SENTENCE VALUES(316,'when ..',1,315)
DELETE FROM SENTENCE WHERE ID=317
INSERT INTO SENTENCE VALUES(317,'then ..',1,316)
DELETE FROM SENTENCE WHERE ID=318
INSERT INTO SENTENCE VALUES(318,'else ..',1,317)
DELETE FROM SENTENCE WHERE ID=319
INSERT INTO SENTENCE VALUES(319,'end',1,318)
DELETE FROM SENTENCE WHERE ID=320
INSERT INTO SENTENCE VALUES(320,'case when ..',1,319)
DELETE FROM SENTENCE WHERE ID=321
INSERT INTO SENTENCE VALUES(321,'then ..',1,320)
DELETE FROM SENTENCE WHERE ID=322
INSERT INTO SENTENCE VALUES(322,'else ..',1,321)
DELETE FROM SENTENCE WHERE ID=323
INSERT INTO SENTENCE VALUES(323,'end',1,322)
DELETE FROM SENTENCE WHERE ID=324
INSERT INTO SENTENCE VALUES(324,'string concatenation or',1,323)
DELETE FROM SENTENCE WHERE ID=325
INSERT INTO SENTENCE VALUES(325,'...||...',1,324)
DELETE FROM SENTENCE WHERE ID=326
INSERT INTO SENTENCE VALUES(326,'concat(...,...)',1,325)
DELETE FROM SENTENCE WHERE ID=327
INSERT INTO SENTENCE VALUES(327,', , and',1,326)
DELETE FROM SENTENCE WHERE ID=328
INSERT INTO SENTENCE VALUES(328,'current_date()',1,327)
DELETE FROM SENTENCE WHERE ID=329
INSERT INTO SENTENCE VALUES(329,'current_time()',1,328)
DELETE FROM SENTENCE WHERE ID=330
INSERT INTO SENTENCE VALUES(330,'current_timestamp()',1,329)
DELETE FROM SENTENCE WHERE ID=331
INSERT INTO SENTENCE VALUES(331,', , , , , and',1,330)
DELETE FROM SENTENCE WHERE ID=332
INSERT INTO SENTENCE VALUES(332,'second(...)',1,331)
DELETE FROM SENTENCE WHERE ID=333
INSERT INTO SENTENCE VALUES(333,'minute(...)',1,332)
DELETE FROM SENTENCE WHERE ID=334
INSERT INTO SENTENCE VALUES(334,'hour(...)',1,333)
DELETE FROM SENTENCE WHERE ID=335
INSERT INTO SENTENCE VALUES(335,'day(...)',1,334)
DELETE FROM SENTENCE WHERE ID=336
INSERT INTO SENTENCE VALUES(336,'month(...)',1,335)
DELETE FROM SENTENCE WHERE ID=337
INSERT INTO SENTENCE VALUES(337,'year(...)',1,336)
DELETE FROM SENTENCE WHERE ID=338
INSERT INTO SENTENCE VALUES(338,'Any function or operator defined by EJB-QL 3.0:',1,337)
DELETE FROM SENTENCE WHERE ID=339
INSERT INTO SENTENCE VALUES(339,'substring(), trim(), lower(), upper(), length(), locate(), abs(), sqrt(), bit_length(), mod()',1,338)
DELETE FROM SENTENCE WHERE ID=340
INSERT INTO SENTENCE VALUES(340,'and',1,339)
DELETE FROM SENTENCE WHERE ID=341
INSERT INTO SENTENCE VALUES(341,'coalesce()',1,340)
DELETE FROM SENTENCE WHERE ID=342
INSERT INTO SENTENCE VALUES(342,'nullif()',1,341)
DELETE FROM SENTENCE WHERE ID=343
INSERT INTO SENTENCE VALUES(343,'for converting numeric or temporal values to a readable string',1,342)
DELETE FROM SENTENCE WHERE ID=344
INSERT INTO SENTENCE VALUES(344,'str()',1,343)
DELETE FROM SENTENCE WHERE ID=345
INSERT INTO SENTENCE VALUES(345,', where the second argument is the name of a Hibernate type, and if ANSI and is supported by the underlying database',1,344)
DELETE FROM SENTENCE WHERE ID=346
INSERT INTO SENTENCE VALUES(346,'cast(..',1,345)
DELETE FROM SENTENCE WHERE ID=347
INSERT INTO SENTENCE VALUES(347,'as ...)',1,346)
DELETE FROM SENTENCE WHERE ID=348
INSERT INTO SENTENCE VALUES(348,'extract(..',1,347)
DELETE FROM SENTENCE WHERE ID=349
INSERT INTO SENTENCE VALUES(349,'from ...)',1,348)
DELETE FROM SENTENCE WHERE ID=350
INSERT INTO SENTENCE VALUES(350,'cast()',1,349)
DELETE FROM SENTENCE WHERE ID=351
INSERT INTO SENTENCE VALUES(351,'extract()',1,350)
DELETE FROM SENTENCE WHERE ID=352
INSERT INTO SENTENCE VALUES(352,'the HQL function, that applies to aliases of a joined indexed collection',1,351)
DELETE FROM SENTENCE WHERE ID=353
INSERT INTO SENTENCE VALUES(353,'index()',1,352)
DELETE FROM SENTENCE WHERE ID=354
INSERT INTO SENTENCE VALUES(354,'HQL functions that take collection-valued path expressions: , along with the special and functions that can be quantified using .',1,353)
DELETE FROM SENTENCE WHERE ID=355
INSERT INTO SENTENCE VALUES(355,'size(), minelement(), maxelement(), minindex(), maxindex()',1,354)
DELETE FROM SENTENCE WHERE ID=356
INSERT INTO SENTENCE VALUES(356,'elements()',1,355)
DELETE FROM SENTENCE WHERE ID=357
INSERT INTO SENTENCE VALUES(357,'indices',1,356)
DELETE FROM SENTENCE WHERE ID=358
INSERT INTO SENTENCE VALUES(358,'some, all, exists, any, in',1,357)
DELETE FROM SENTENCE WHERE ID=359
INSERT INTO SENTENCE VALUES(359,'Any database-supported SQL scalar function like , , , and',1,358)
DELETE FROM SENTENCE WHERE ID=360
INSERT INTO SENTENCE VALUES(360,'sign()',1,359)
DELETE FROM SENTENCE WHERE ID=361
INSERT INTO SENTENCE VALUES(361,'trunc()',1,360)
DELETE FROM SENTENCE WHERE ID=362
INSERT INTO SENTENCE VALUES(362,'rtrim()',1,361)
DELETE FROM SENTENCE WHERE ID=363
INSERT INTO SENTENCE VALUES(363,'sin()',1,362)
DELETE FROM SENTENCE WHERE ID=364
INSERT INTO SENTENCE VALUES(364,'JDBC-style positional parameters',1,363)
DELETE FROM SENTENCE WHERE ID=365
INSERT INTO SENTENCE VALUES(365,'named parameters , , and',1,364)
DELETE FROM SENTENCE WHERE ID=366
INSERT INTO SENTENCE VALUES(366,':name',1,365)
DELETE FROM SENTENCE WHERE ID=367
INSERT INTO SENTENCE VALUES(367,':start_date',1,366)
DELETE FROM SENTENCE WHERE ID=368
INSERT INTO SENTENCE VALUES(368,':x1',1,367)
DELETE FROM SENTENCE WHERE ID=369
INSERT INTO SENTENCE VALUES(369,'SQL literals , , ,',1,368)
DELETE FROM SENTENCE WHERE ID=370
INSERT INTO SENTENCE VALUES(370,'''foo''',1,369)
DELETE FROM SENTENCE WHERE ID=371
INSERT INTO SENTENCE VALUES(371,'69',1,370)
DELETE FROM SENTENCE WHERE ID=372
INSERT INTO SENTENCE VALUES(372,'6.66E+2',1,371)
DELETE FROM SENTENCE WHERE ID=373
INSERT INTO SENTENCE VALUES(373,'''1970-01-01 10:00:01.0''',1,372)
DELETE FROM SENTENCE WHERE ID=374
INSERT INTO SENTENCE VALUES(374,'Java constants',1,373)
DELETE FROM SENTENCE WHERE ID=375
INSERT INTO SENTENCE VALUES(375,'public static final',1,374)
DELETE FROM SENTENCE WHERE ID=376
INSERT INTO SENTENCE VALUES(376,'eg.Color.TABBY',1,375)
DELETE FROM SENTENCE WHERE ID=377
INSERT INTO SENTENCE VALUES(377,'and can be used as follows:',1,376)
DELETE FROM SENTENCE WHERE ID=378
INSERT INTO SENTENCE VALUES(378,'in',1,377)
DELETE FROM SENTENCE WHERE ID=379
INSERT INTO SENTENCE VALUES(379,'between',1,378)
DELETE FROM SENTENCE WHERE ID=380
INSERT INTO SENTENCE VALUES(380,'from DomesticCat cat where cat.name between ''A'' and ''B''',1,379)
DELETE FROM SENTENCE WHERE ID=381
INSERT INTO SENTENCE VALUES(381,'from DomesticCat cat where cat.name in ( ''Foo'', ''Bar'', ''Baz'' )',1,380)
DELETE FROM SENTENCE WHERE ID=382
INSERT INTO SENTENCE VALUES(382,'The negated forms can be written as follows:',1,381)
DELETE FROM SENTENCE WHERE ID=383
INSERT INTO SENTENCE VALUES(383,'from DomesticCat cat where cat.name not between ''A'' and ''B''',1,382)
DELETE FROM SENTENCE WHERE ID=384
INSERT INTO SENTENCE VALUES(384,'from DomesticCat cat where cat.name not in ( ''Foo'', ''Bar'', ''Baz'' )',1,383)
DELETE FROM SENTENCE WHERE ID=385
INSERT INTO SENTENCE VALUES(385,'Similarly, and can be used to test for null values.',1,384)
DELETE FROM SENTENCE WHERE ID=386
INSERT INTO SENTENCE VALUES(386,'is null',1,385)
DELETE FROM SENTENCE WHERE ID=387
INSERT INTO SENTENCE VALUES(387,'is not null',1,386)
DELETE FROM SENTENCE WHERE ID=388
INSERT INTO SENTENCE VALUES(388,'Booleans can be easily used in expressions by declaring HQL query substitutions in Hibernate configuration:',1,387)
DELETE FROM SENTENCE WHERE ID=389
INSERT INTO SENTENCE VALUES(389,'<property name="hibernate.query.substitutions">true 1, false 0</property>',1,388)
DELETE FROM SENTENCE WHERE ID=390
INSERT INTO SENTENCE VALUES(390,'This will replace the keywords and with the literals and in the translated SQL from this HQL:',1,389)
DELETE FROM SENTENCE WHERE ID=391
INSERT INTO SENTENCE VALUES(391,'true',1,390)
DELETE FROM SENTENCE WHERE ID=392
INSERT INTO SENTENCE VALUES(392,'false',1,391)
DELETE FROM SENTENCE WHERE ID=393
INSERT INTO SENTENCE VALUES(393,'from Cat cat where cat.alive = true',1,392)
DELETE FROM SENTENCE WHERE ID=394
INSERT INTO SENTENCE VALUES(394,'You can test the size of a collection with the special property or the special function.',1,393)
DELETE FROM SENTENCE WHERE ID=395
INSERT INTO SENTENCE VALUES(395,'size',1,394)
DELETE FROM SENTENCE WHERE ID=396
INSERT INTO SENTENCE VALUES(396,'size()',1,395)
DELETE FROM SENTENCE WHERE ID=397
INSERT INTO SENTENCE VALUES(397,'from Cat cat where cat.kittens.size > 0',1,396)
DELETE FROM SENTENCE WHERE ID=398
INSERT INTO SENTENCE VALUES(398,'from Cat cat where size(cat.kittens) > 0',1,397)
DELETE FROM SENTENCE WHERE ID=399
INSERT INTO SENTENCE VALUES(399,'For indexed collections, you can refer to the minimum and maximum indices using and functions',1,398)
DELETE FROM SENTENCE WHERE ID=400
INSERT INTO SENTENCE VALUES(400,'Similarly, you can refer to the minimum and maximum elements of a collection of basic type using the and functions',1,399)
DELETE FROM SENTENCE WHERE ID=401
INSERT INTO SENTENCE VALUES(401,'For example:',1,400)
DELETE FROM SENTENCE WHERE ID=402
INSERT INTO SENTENCE VALUES(402,'minindex',1,401)
DELETE FROM SENTENCE WHERE ID=403
INSERT INTO SENTENCE VALUES(403,'maxindex',1,402)
DELETE FROM SENTENCE WHERE ID=404
INSERT INTO SENTENCE VALUES(404,'minelement',1,403)
DELETE FROM SENTENCE WHERE ID=405
INSERT INTO SENTENCE VALUES(405,'maxelement',1,404)
DELETE FROM SENTENCE WHERE ID=406
INSERT INTO SENTENCE VALUES(406,'from Calendar cal where maxelement(cal.holidays) > current_date',1,405)
DELETE FROM SENTENCE WHERE ID=407
INSERT INTO SENTENCE VALUES(407,'from Order order where maxindex(order.items) > 100',1,406)
DELETE FROM SENTENCE WHERE ID=408
INSERT INTO SENTENCE VALUES(408,'from Order order where minelement(order.items) > 10000',1,407)
DELETE FROM SENTENCE WHERE ID=409
INSERT INTO SENTENCE VALUES(409,'The SQL functions are supported when passed the element or index set of a collection ( and functions) or the result of a subquery (see below):',1,408)
DELETE FROM SENTENCE WHERE ID=410
INSERT INTO SENTENCE VALUES(410,'any, some, all, exists, in',1,409)
DELETE FROM SENTENCE WHERE ID=411
INSERT INTO SENTENCE VALUES(411,'elements',1,410)
DELETE FROM SENTENCE WHERE ID=412
INSERT INTO SENTENCE VALUES(412,'indices',1,411)
DELETE FROM SENTENCE WHERE ID=413
INSERT INTO SENTENCE VALUES(413,'select mother from Cat as mother, Cat as kit\u000awhere kit in elements(foo.kittens)',1,412)
DELETE FROM SENTENCE WHERE ID=414
INSERT INTO SENTENCE VALUES(414,'select p from NameList list, Person p\u000awhere p.name = some elements(list.names)',1,413)
DELETE FROM SENTENCE WHERE ID=415
INSERT INTO SENTENCE VALUES(415,'from Cat cat where exists elements(cat.kittens)',1,414)
DELETE FROM SENTENCE WHERE ID=416
INSERT INTO SENTENCE VALUES(416,'from Player p where 3 > all elements(p.scores)',1,415)
DELETE FROM SENTENCE WHERE ID=417
INSERT INTO SENTENCE VALUES(417,'from Show show where ''fizard'' in indices(show.acts)',1,416)
DELETE FROM SENTENCE WHERE ID=418
INSERT INTO SENTENCE VALUES(418,'Note that these constructs - , , , , , , - can only be used in the where clause in Hibernate3.',1,417)
DELETE FROM SENTENCE WHERE ID=419
INSERT INTO SENTENCE VALUES(419,'size',1,418)
DELETE FROM SENTENCE WHERE ID=420
INSERT INTO SENTENCE VALUES(420,'elements',1,419)
DELETE FROM SENTENCE WHERE ID=421
INSERT INTO SENTENCE VALUES(421,'indices',1,420)
DELETE FROM SENTENCE WHERE ID=422
INSERT INTO SENTENCE VALUES(422,'minindex',1,421)
DELETE FROM SENTENCE WHERE ID=423
INSERT INTO SENTENCE VALUES(423,'maxindex',1,422)
DELETE FROM SENTENCE WHERE ID=424
INSERT INTO SENTENCE VALUES(424,'minelement',1,423)
DELETE FROM SENTENCE WHERE ID=425
INSERT INTO SENTENCE VALUES(425,'maxelement',1,424)
DELETE FROM SENTENCE WHERE ID=426
INSERT INTO SENTENCE VALUES(426,'Elements of indexed collections (arrays, lists, and maps) can be referred to by index in a where clause only:',1,425)
DELETE FROM SENTENCE WHERE ID=427
INSERT INTO SENTENCE VALUES(427,'from Order order where order.items[0].id = 1234',1,426)
DELETE FROM SENTENCE WHERE ID=428
INSERT INTO SENTENCE VALUES(428,'select person from Person person, Calendar calendar\u000awhere calendar.holidays[''national day''] = person.birthDay\u000a    and person.nationality.calendar = calendar',1,427)
DELETE FROM SENTENCE WHERE ID=429
INSERT INTO SENTENCE VALUES(429,'select item from Item item, Order order\u000awhere order.items[ order.deliveredItemIndices[0] ] = item and order.id = 11',1,428)
DELETE FROM SENTENCE WHERE ID=430
INSERT INTO SENTENCE VALUES(430,'select item from Item item, Order order\u000awhere order.items[ maxindex(order.items) ] = item and order.id = 11',1,429)
DELETE FROM SENTENCE WHERE ID=431
INSERT INTO SENTENCE VALUES(431,'The expression inside can even be an arithmetic expression:',1,430)
DELETE FROM SENTENCE WHERE ID=432
INSERT INTO SENTENCE VALUES(432,'[]',1,431)
DELETE FROM SENTENCE WHERE ID=433
INSERT INTO SENTENCE VALUES(433,'select item from Item item, Order order\u000awhere order.items[ size(order.items) - 1 ] = item',1,432)
DELETE FROM SENTENCE WHERE ID=434
INSERT INTO SENTENCE VALUES(434,'HQL also provides the built-in function for elements of a one-to-many association or collection of values.',1,433)
DELETE FROM SENTENCE WHERE ID=435
INSERT INTO SENTENCE VALUES(435,'index()',1,434)
DELETE FROM SENTENCE WHERE ID=436
INSERT INTO SENTENCE VALUES(436,'select item, index(item) from Order order\u000a    join order.items item\u000awhere index(item) < 5',1,435)
DELETE FROM SENTENCE WHERE ID=437
INSERT INTO SENTENCE VALUES(437,'Scalar SQL functions supported by the underlying database can be used:',1,436)
DELETE FROM SENTENCE WHERE ID=438
INSERT INTO SENTENCE VALUES(438,'from DomesticCat cat where upper(cat.name) like ''FRI%''',1,437)
DELETE FROM SENTENCE WHERE ID=439
INSERT INTO SENTENCE VALUES(439,'Consider how much longer and less readable the following query would be in SQL:',1,438)
DELETE FROM SENTENCE WHERE ID=440
INSERT INTO SENTENCE VALUES(440,'select cust\u000afrom Product prod,\u000a    Store store\u000a    inner join store.customers cust\u000awhere prod.name = ''widget''\u000a    and store.location.name in ( ''Melbourne'', ''Sydney'' )\u000a    and prod = all elements(cust.currentOrder.lineItems)',1,439)
DELETE FROM SENTENCE WHERE ID=441
INSERT INTO SENTENCE VALUES(441,'something like',1,440)
DELETE FROM SENTENCE WHERE ID=442
INSERT INTO SENTENCE VALUES(442,'Hint:',1,441)
DELETE FROM SENTENCE WHERE ID=443
INSERT INTO SENTENCE VALUES(443,'SELECT cust.name, cust.address, cust.phone, cust.id, cust.current_order\u000aFROM customers cust,\u000a    stores store,\u000a    locations loc,\u000a    store_customers sc,\u000a    product prod\u000aWHERE prod.name = ''widget''\u000a    AND store.loc_id = loc.id\u000a    AND loc.name IN ( ''Melbourne'', ''Sydney'' )\u000a    AND sc.store_id = store.id\u000a    AND sc.cust_id = cust.id\u000a    AND prod.id = ALL(\u000a        SELECT item.prod_id\u000a        FROM line_items item, orders o\u000a        WHERE item.order_id = o.id\u000a            AND cust.current_order = o.id\u000a    )',1,442)
DELETE FROM SENTENCE WHERE ID=444
INSERT INTO SENTENCE VALUES(444,'14.11.\u00a0The order by clause',1,443)
DELETE FROM SENTENCE WHERE ID=445
INSERT INTO SENTENCE VALUES(445,'The list returned by a query can be ordered by any property of a returned class or components:',1,444)
DELETE FROM SENTENCE WHERE ID=446
INSERT INTO SENTENCE VALUES(446,'from DomesticCat cat\u000aorder by cat.name asc, cat.weight desc, cat.birthdate',1,445)
DELETE FROM SENTENCE WHERE ID=447
INSERT INTO SENTENCE VALUES(447,'The optional or indicate ascending or descending order respectively.',1,446)
DELETE FROM SENTENCE WHERE ID=448
INSERT INTO SENTENCE VALUES(448,'asc',1,447)
DELETE FROM SENTENCE WHERE ID=449
INSERT INTO SENTENCE VALUES(449,'desc',1,448)
DELETE FROM SENTENCE WHERE ID=450
INSERT INTO SENTENCE VALUES(450,'14.12.\u00a0The group by clause',1,449)
DELETE FROM SENTENCE WHERE ID=451
INSERT INTO SENTENCE VALUES(451,'A query that returns aggregate values can be grouped by any property of a returned class or components:',1,450)
DELETE FROM SENTENCE WHERE ID=452
INSERT INTO SENTENCE VALUES(452,'select cat.color, sum(cat.weight), count(cat)\u000afrom Cat cat\u000agroup by cat.color',1,451)
DELETE FROM SENTENCE WHERE ID=453
INSERT INTO SENTENCE VALUES(453,'select foo.id, avg(name), max(name)\u000afrom Foo foo join foo.names name\u000agroup by foo.id',1,452)
DELETE FROM SENTENCE WHERE ID=454
INSERT INTO SENTENCE VALUES(454,'A clause is also allowed.',1,453)
DELETE FROM SENTENCE WHERE ID=455
INSERT INTO SENTENCE VALUES(455,'having',1,454)
DELETE FROM SENTENCE WHERE ID=456
INSERT INTO SENTENCE VALUES(456,'select cat.color, sum(cat.weight), count(cat)\u000afrom Cat cat\u000agroup by cat.color\u000ahaving cat.color in (eg.Color.TABBY, eg.Color.BLACK)',1,455)
DELETE FROM SENTENCE WHERE ID=457
INSERT INTO SENTENCE VALUES(457,'SQL functions and aggregate functions are allowed in the and clauses if they are supported by the underlying database (i.e., not in MySQL).',1,456)
DELETE FROM SENTENCE WHERE ID=458
INSERT INTO SENTENCE VALUES(458,'having',1,457)
DELETE FROM SENTENCE WHERE ID=459
INSERT INTO SENTENCE VALUES(459,'order by',1,458)
DELETE FROM SENTENCE WHERE ID=460
INSERT INTO SENTENCE VALUES(460,'select cat\u000afrom Cat cat\u000a    join cat.kittens kitten\u000agroup by cat.id, cat.name, cat.other, cat.properties\u000ahaving avg(kitten.weight) > 100\u000aorder by count(kitten) asc, sum(kitten.weight) desc',1,459)
DELETE FROM SENTENCE WHERE ID=461
INSERT INTO SENTENCE VALUES(461,'Neither the clause nor the clause can contain arithmetic expressions',1,460)
DELETE FROM SENTENCE WHERE ID=462
INSERT INTO SENTENCE VALUES(462,'Hibernate also does not currently expand a grouped entity, so you cannot write if all properties of are non-aggregated',1,461)
DELETE FROM SENTENCE WHERE ID=463
INSERT INTO SENTENCE VALUES(463,'You have to list all non-aggregated properties explicitly.',1,462)
DELETE FROM SENTENCE WHERE ID=464
INSERT INTO SENTENCE VALUES(464,'group by',1,463)
DELETE FROM SENTENCE WHERE ID=465
INSERT INTO SENTENCE VALUES(465,'order by',1,464)
DELETE FROM SENTENCE WHERE ID=466
INSERT INTO SENTENCE VALUES(466,'group by cat',1,465)
DELETE FROM SENTENCE WHERE ID=467
INSERT INTO SENTENCE VALUES(467,'cat',1,466)
DELETE FROM SENTENCE WHERE ID=468
INSERT INTO SENTENCE VALUES(468,'14.13.\u00a0Subqueries',1,467)
DELETE FROM SENTENCE WHERE ID=469
INSERT INTO SENTENCE VALUES(469,'For databases that support subselects, Hibernate supports subqueries within queries',1,468)
DELETE FROM SENTENCE WHERE ID=470
INSERT INTO SENTENCE VALUES(470,'A subquery must be surrounded by parentheses (often by an SQL aggregate function call)',1,469)
DELETE FROM SENTENCE WHERE ID=471
INSERT INTO SENTENCE VALUES(471,'Even correlated subqueries (subqueries that refer to an alias in the outer query) are allowed.',1,470)
DELETE FROM SENTENCE WHERE ID=472
INSERT INTO SENTENCE VALUES(472,'from Cat as fatcat\u000awhere fatcat.weight > (\u000a    select avg(cat.weight) from DomesticCat cat\u000a)',1,471)
DELETE FROM SENTENCE WHERE ID=473
INSERT INTO SENTENCE VALUES(473,'from DomesticCat as cat\u000awhere cat.name = some (\u000a    select name.nickName from Name as name\u000a)',1,472)
DELETE FROM SENTENCE WHERE ID=474
INSERT INTO SENTENCE VALUES(474,'from Cat as cat\u000awhere not exists (\u000a    from Cat as mate where mate.mate = cat\u000a)',1,473)
DELETE FROM SENTENCE WHERE ID=475
INSERT INTO SENTENCE VALUES(475,'from DomesticCat as cat\u000awhere cat.name not in (\u000a    select name.nickName from Name as name\u000a)',1,474)
DELETE FROM SENTENCE WHERE ID=476
INSERT INTO SENTENCE VALUES(476,'select cat.id, (select max(kit.weight) from cat.kitten kit)\u000afrom Cat as cat',1,475)
DELETE FROM SENTENCE WHERE ID=477
INSERT INTO SENTENCE VALUES(477,'Note that HQL subqueries can occur only in the select or where clauses.',1,476)
DELETE FROM SENTENCE WHERE ID=478
INSERT INTO SENTENCE VALUES(478,'Note that subqueries can also utilize syntax',1,477)
DELETE FROM SENTENCE WHERE ID=479
INSERT INTO SENTENCE VALUES(479,'See for more information.',1,478)
DELETE FROM SENTENCE WHERE ID=480
INSERT INTO SENTENCE VALUES(480,'row value constructor',1,479)
DELETE FROM SENTENCE WHERE ID=481
INSERT INTO SENTENCE VALUES(481,'Section\u00a014.18, \u201cRow value constructor syntax\u201d',1,480)
DELETE FROM SENTENCE WHERE ID=482
INSERT INTO SENTENCE VALUES(482,'14.14.\u00a0HQL examples',1,481)
DELETE FROM SENTENCE WHERE ID=483
INSERT INTO SENTENCE VALUES(483,'Hibernate queries can be quite powerful and complex',1,482)
DELETE FROM SENTENCE WHERE ID=484
INSERT INTO SENTENCE VALUES(484,'In fact, the power of the query language is one of Hibernate''s main strengths',1,483)
DELETE FROM SENTENCE WHERE ID=485
INSERT INTO SENTENCE VALUES(485,'The following example queries are similar to queries that have been used on recent projects',1,484)
DELETE FROM SENTENCE WHERE ID=486
INSERT INTO SENTENCE VALUES(486,'Please note that most queries you will write will be much simpler than the following examples.',1,485)
DELETE FROM SENTENCE WHERE ID=487
INSERT INTO SENTENCE VALUES(487,'The following query returns the order id, number of items, the given minimum total value and the total value of the order for all unpaid orders for a particular customer',1,486)
DELETE FROM SENTENCE WHERE ID=488
INSERT INTO SENTENCE VALUES(488,'The results are ordered by total value',1,487)
DELETE FROM SENTENCE WHERE ID=489
INSERT INTO SENTENCE VALUES(489,'In determining the prices, it uses the current catalog',1,488)
DELETE FROM SENTENCE WHERE ID=490
INSERT INTO SENTENCE VALUES(490,'The resulting SQL query, against the , , , and tables has four inner joins and an (uncorrelated) subselect.',1,489)
DELETE FROM SENTENCE WHERE ID=491
INSERT INTO SENTENCE VALUES(491,'ORDER',1,490)
DELETE FROM SENTENCE WHERE ID=492
INSERT INTO SENTENCE VALUES(492,'ORDER_LINE',1,491)
DELETE FROM SENTENCE WHERE ID=493
INSERT INTO SENTENCE VALUES(493,'PRODUCT',1,492)
DELETE FROM SENTENCE WHERE ID=494
INSERT INTO SENTENCE VALUES(494,'CATALOG',1,493)
DELETE FROM SENTENCE WHERE ID=495
INSERT INTO SENTENCE VALUES(495,'PRICE',1,494)
DELETE FROM SENTENCE WHERE ID=496
INSERT INTO SENTENCE VALUES(496,'select order.id, sum(price.amount), count(item)\u000afrom Order as order\u000a    join order.lineItems as item\u000a    join item.product as product,\u000a    Catalog as catalog\u000a    join catalog.prices as price\u000awhere order.paid = false\u000a    and order.customer = :customer\u000a    and price.product = product\u000a    and catalog.effectiveDate < sysdate\u000a    and catalog.effectiveDate >= all (\u000a        select cat.effectiveDate\u000a        from Catalog as cat\u000a        where cat.effectiveDate < sysdate\u000a    )\u000agroup by order\u000ahaving sum(price.amount) > :minAmount\u000aorder by sum(price.amount) desc',1,495)
DELETE FROM SENTENCE WHERE ID=497
INSERT INTO SENTENCE VALUES(497,'What a monster! Actually, in real life, I''m not very keen on subqueries, so my query was really more like this:',1,496)
DELETE FROM SENTENCE WHERE ID=498
INSERT INTO SENTENCE VALUES(498,'select order.id, sum(price.amount), count(item)\u000afrom Order as order\u000a    join order.lineItems as item\u000a    join item.product as product,\u000a    Catalog as catalog\u000a    join catalog.prices as price\u000awhere order.paid = false\u000a    and order.customer = :customer\u000a    and price.product = product\u000a    and catalog = :currentCatalog\u000agroup by order\u000ahaving sum(price.amount) > :minAmount\u000aorder by sum(price.amount) desc',1,497)
DELETE FROM SENTENCE WHERE ID=499
INSERT INTO SENTENCE VALUES(499,'The next query counts the number of payments in each status, excluding all payments in the status where the most recent status change was made by the current user',1,498)
DELETE FROM SENTENCE WHERE ID=500
INSERT INTO SENTENCE VALUES(500,'It translates to an SQL query with two inner joins and a correlated subselect against the , and tables.',1,499)
DELETE FROM SENTENCE WHERE ID=501
INSERT INTO SENTENCE VALUES(501,'AWAITING_APPROVAL',1,500)
DELETE FROM SENTENCE WHERE ID=502
INSERT INTO SENTENCE VALUES(502,'PAYMENT',1,501)
DELETE FROM SENTENCE WHERE ID=503
INSERT INTO SENTENCE VALUES(503,'PAYMENT_STATUS',1,502)
DELETE FROM SENTENCE WHERE ID=504
INSERT INTO SENTENCE VALUES(504,'PAYMENT_STATUS_CHANGE',1,503)
DELETE FROM SENTENCE WHERE ID=505
INSERT INTO SENTENCE VALUES(505,'select count(payment), status.name\u000afrom Payment as payment\u000a    join payment.currentStatus as status\u000a    join payment.statusChanges as statusChange\u000awhere payment.status.name <> PaymentStatus.AWAITING_APPROVAL\u000a    or (\u000a        statusChange.timeStamp = (\u000a            select max(change.timeStamp)\u000a            from PaymentStatusChange change\u000a            where change.payment = payment\u000a        )\u000a        and statusChange.user <> :currentUser\u000a    )\u000agroup by status.name, status.sortOrder\u000aorder by status.sortOrder',1,504)
DELETE FROM SENTENCE WHERE ID=506
INSERT INTO SENTENCE VALUES(506,'If the collection was mapped as a list, instead of a set, the query would have been much simpler to write.',1,505)
DELETE FROM SENTENCE WHERE ID=507
INSERT INTO SENTENCE VALUES(507,'statusChanges',1,506)
DELETE FROM SENTENCE WHERE ID=508
INSERT INTO SENTENCE VALUES(508,'select count(payment), status.name\u000afrom Payment as payment\u000a    join payment.currentStatus as status\u000awhere payment.status.name <> PaymentStatus.AWAITING_APPROVAL\u000a    or payment.statusChanges[ maxIndex(payment.statusChanges) ].user <> :currentUser\u000agroup by status.name, status.sortOrder\u000aorder by status.sortOrder',1,507)
DELETE FROM SENTENCE WHERE ID=509
INSERT INTO SENTENCE VALUES(509,'The next query uses the MS SQL Server function to return all the accounts and unpaid payments for the organization to which the current user belongs',1,508)
DELETE FROM SENTENCE WHERE ID=510
INSERT INTO SENTENCE VALUES(510,'It translates to an SQL query with three inner joins, an outer join and a subselect against the , , , , and tables.',1,509)
DELETE FROM SENTENCE WHERE ID=511
INSERT INTO SENTENCE VALUES(511,'isNull()',1,510)
DELETE FROM SENTENCE WHERE ID=512
INSERT INTO SENTENCE VALUES(512,'ACCOUNT',1,511)
DELETE FROM SENTENCE WHERE ID=513
INSERT INTO SENTENCE VALUES(513,'PAYMENT',1,512)
DELETE FROM SENTENCE WHERE ID=514
INSERT INTO SENTENCE VALUES(514,'PAYMENT_STATUS',1,513)
DELETE FROM SENTENCE WHERE ID=515
INSERT INTO SENTENCE VALUES(515,'ACCOUNT_TYPE',1,514)
DELETE FROM SENTENCE WHERE ID=516
INSERT INTO SENTENCE VALUES(516,'ORGANIZATION',1,515)
DELETE FROM SENTENCE WHERE ID=517
INSERT INTO SENTENCE VALUES(517,'ORG_USER',1,516)
DELETE FROM SENTENCE WHERE ID=518
INSERT INTO SENTENCE VALUES(518,'select account, payment\u000afrom Account as account\u000a    left outer join account.payments as payment\u000awhere :currentUser in elements(account.holder.users)\u000a    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, PaymentStatus.UNPAID)\u000aorder by account.type.sortOrder, account.accountNumber, payment.dueDate',1,517)
DELETE FROM SENTENCE WHERE ID=519
INSERT INTO SENTENCE VALUES(519,'For some databases, we would need to do away with the (correlated) subselect.',1,518)
DELETE FROM SENTENCE WHERE ID=520
INSERT INTO SENTENCE VALUES(520,'select account, payment\u000afrom Account as account\u000a    join account.holder.users as user\u000a    left outer join account.payments as payment\u000awhere :currentUser = user\u000a    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, PaymentStatus.UNPAID)\u000aorder by account.type.sortOrder, account.accountNumber, payment.dueDate',1,519)
DELETE FROM SENTENCE WHERE ID=521
INSERT INTO SENTENCE VALUES(521,'14.15.\u00a0Bulk update and delete',1,520)
DELETE FROM SENTENCE WHERE ID=522
INSERT INTO SENTENCE VALUES(522,'HQL now supports , and statements',1,521)
DELETE FROM SENTENCE WHERE ID=523
INSERT INTO SENTENCE VALUES(523,'See for more information.',1,522)
DELETE FROM SENTENCE WHERE ID=524
INSERT INTO SENTENCE VALUES(524,'update',1,523)
DELETE FROM SENTENCE WHERE ID=525
INSERT INTO SENTENCE VALUES(525,'delete',1,524)
DELETE FROM SENTENCE WHERE ID=526
INSERT INTO SENTENCE VALUES(526,'insert ..',1,525)
DELETE FROM SENTENCE WHERE ID=527
INSERT INTO SENTENCE VALUES(527,'select ...',1,526)
DELETE FROM SENTENCE WHERE ID=528
INSERT INTO SENTENCE VALUES(528,'Section\u00a013.4, \u201cDML-style operations\u201d',1,527)
DELETE FROM SENTENCE WHERE ID=529
INSERT INTO SENTENCE VALUES(529,'14.16.\u00a0Tips & Tricks',1,528)
DELETE FROM SENTENCE WHERE ID=530
INSERT INTO SENTENCE VALUES(530,'You can count the number of query results without returning them:',1,529)
DELETE FROM SENTENCE WHERE ID=531
INSERT INTO SENTENCE VALUES(531,'( (Integer) session.createQuery("select count(*) from ....").iterate().next() ).intValue()',1,530)
DELETE FROM SENTENCE WHERE ID=532
INSERT INTO SENTENCE VALUES(532,'To order a result by the size of a collection, use the following query:',1,531)
DELETE FROM SENTENCE WHERE ID=533
INSERT INTO SENTENCE VALUES(533,'select usr.id, usr.name\u000afrom User as usr\u000a    left join usr.messages as msg\u000agroup by usr.id, usr.name\u000aorder by count(msg)',1,532)
DELETE FROM SENTENCE WHERE ID=534
INSERT INTO SENTENCE VALUES(534,'If your database supports subselects, you can place a condition upon selection size in the where clause of your query:',1,533)
DELETE FROM SENTENCE WHERE ID=535
INSERT INTO SENTENCE VALUES(535,'from User usr where size(usr.messages) >= 1',1,534)
DELETE FROM SENTENCE WHERE ID=536
INSERT INTO SENTENCE VALUES(536,'If your database does not support subselects, use the following query:',1,535)
DELETE FROM SENTENCE WHERE ID=537
INSERT INTO SENTENCE VALUES(537,'select usr.id, usr.name\u000afrom User usr.name\u000a    join usr.messages msg\u000agroup by usr.id, usr.name\u000ahaving count(msg) >= 1',1,536)
DELETE FROM SENTENCE WHERE ID=538
INSERT INTO SENTENCE VALUES(538,'As this solution cannot return a with zero messages because of the inner join, the following form is also useful:',1,537)
DELETE FROM SENTENCE WHERE ID=539
INSERT INTO SENTENCE VALUES(539,'User',1,538)
DELETE FROM SENTENCE WHERE ID=540
INSERT INTO SENTENCE VALUES(540,'select usr.id, usr.name\u000afrom User as usr\u000a    left join usr.messages as msg\u000agroup by usr.id, usr.name\u000ahaving count(msg) = 0',1,539)
DELETE FROM SENTENCE WHERE ID=541
INSERT INTO SENTENCE VALUES(541,'Properties of a JavaBean can be bound to named query parameters:',1,540)
DELETE FROM SENTENCE WHERE ID=542
INSERT INTO SENTENCE VALUES(542,'Query q = s.createQuery("from foo Foo as foo where foo.name=:name and foo.size=:size");\u000aq.setProperties(fooBean); // fooBean has getName() and getSize()\u000aList foos = q.list();',1,541)
DELETE FROM SENTENCE WHERE ID=543
INSERT INTO SENTENCE VALUES(543,'Collections are pageable by using the interface with a filter:',1,542)
DELETE FROM SENTENCE WHERE ID=544
INSERT INTO SENTENCE VALUES(544,'Query',1,543)
DELETE FROM SENTENCE WHERE ID=545
INSERT INTO SENTENCE VALUES(545,'Query q = s.createFilter( collection, "" ); // the trivial filter\u000aq.setMaxResults(PAGE_SIZE);\u000aq.setFirstResult(PAGE_SIZE * pageNumber);\u000aList page = q.list();',1,544)
DELETE FROM SENTENCE WHERE ID=546
INSERT INTO SENTENCE VALUES(546,'Collection elements can be ordered or grouped using a query filter:',1,545)
DELETE FROM SENTENCE WHERE ID=547
INSERT INTO SENTENCE VALUES(547,'Collection orderedCollection = s.filter( collection, "order by this.amount" );\u000aCollection counts = s.filter( collection, "select this.type, count(this) group by this.type" );',1,546)
DELETE FROM SENTENCE WHERE ID=548
INSERT INTO SENTENCE VALUES(548,'You can find the size of a collection without initializing it:',1,547)
DELETE FROM SENTENCE WHERE ID=549
INSERT INTO SENTENCE VALUES(549,'( (Integer) session.createQuery("select count(*) from ....").iterate().next() ).intValue();',1,548)
DELETE FROM SENTENCE WHERE ID=550
INSERT INTO SENTENCE VALUES(550,'14.17.\u00a0Components',1,549)
DELETE FROM SENTENCE WHERE ID=551
INSERT INTO SENTENCE VALUES(551,'Components can be used similarly to the simple value types that are used in HQL queries',1,550)
DELETE FROM SENTENCE WHERE ID=552
INSERT INTO SENTENCE VALUES(552,'They can appear in the clause as follows:',1,551)
DELETE FROM SENTENCE WHERE ID=553
INSERT INTO SENTENCE VALUES(553,'select',1,552)
DELETE FROM SENTENCE WHERE ID=554
INSERT INTO SENTENCE VALUES(554,'select p.name from Person p',1,553)
DELETE FROM SENTENCE WHERE ID=555
INSERT INTO SENTENCE VALUES(555,'select p.name.first from Person p',1,554)
DELETE FROM SENTENCE WHERE ID=556
INSERT INTO SENTENCE VALUES(556,'where the Person''s name property is a component',1,555)
DELETE FROM SENTENCE WHERE ID=557
INSERT INTO SENTENCE VALUES(557,'Components can also be used in the clause:',1,556)
DELETE FROM SENTENCE WHERE ID=558
INSERT INTO SENTENCE VALUES(558,'where',1,557)
DELETE FROM SENTENCE WHERE ID=559
INSERT INTO SENTENCE VALUES(559,'from Person p where p.name = :name',1,558)
DELETE FROM SENTENCE WHERE ID=560
INSERT INTO SENTENCE VALUES(560,'from Person p where p.name.first = :firstName',1,559)
DELETE FROM SENTENCE WHERE ID=561
INSERT INTO SENTENCE VALUES(561,'Components can also be used in the clause:',1,560)
DELETE FROM SENTENCE WHERE ID=562
INSERT INTO SENTENCE VALUES(562,'order by',1,561)
DELETE FROM SENTENCE WHERE ID=563
INSERT INTO SENTENCE VALUES(563,'from Person p order by p.name',1,562)
DELETE FROM SENTENCE WHERE ID=564
INSERT INTO SENTENCE VALUES(564,'from Person p order by p.name.first',1,563)
DELETE FROM SENTENCE WHERE ID=565
INSERT INTO SENTENCE VALUES(565,'Another common use of components is in .',1,564)
DELETE FROM SENTENCE WHERE ID=566
INSERT INTO SENTENCE VALUES(566,'row value constructors',1,565)
DELETE FROM SENTENCE WHERE ID=567
INSERT INTO SENTENCE VALUES(567,'14.18.\u00a0Row value constructor syntax',1,566)
DELETE FROM SENTENCE WHERE ID=568
INSERT INTO SENTENCE VALUES(568,'HQL supports the use of ANSI SQL syntax, sometimes referred to AS syntax, even though the underlying database may not support that notion',1,567)
DELETE FROM SENTENCE WHERE ID=569
INSERT INTO SENTENCE VALUES(569,'Here, we are generally referring to multi-valued comparisons, typically associated with components',1,568)
DELETE FROM SENTENCE WHERE ID=570
INSERT INTO SENTENCE VALUES(570,'Consider an entity Person which defines a name component:',1,569)
DELETE FROM SENTENCE WHERE ID=571
INSERT INTO SENTENCE VALUES(571,'row value constructor',1,570)
DELETE FROM SENTENCE WHERE ID=572
INSERT INTO SENTENCE VALUES(572,'tuple',1,571)
DELETE FROM SENTENCE WHERE ID=573
INSERT INTO SENTENCE VALUES(573,'from Person p where p.name.first=''John'' and p.name.last=''Jingleheimer-Schmidt''',1,572)
DELETE FROM SENTENCE WHERE ID=574
INSERT INTO SENTENCE VALUES(574,'That is valid syntax although it is a little verbose',1,573)
DELETE FROM SENTENCE WHERE ID=575
INSERT INTO SENTENCE VALUES(575,'You can make this more concise by using syntax:',1,574)
DELETE FROM SENTENCE WHERE ID=576
INSERT INTO SENTENCE VALUES(576,'row value constructor',1,575)
DELETE FROM SENTENCE WHERE ID=577
INSERT INTO SENTENCE VALUES(577,'from Person p where p.name=(''John'', ''Jingleheimer-Schmidt'')',1,576)
DELETE FROM SENTENCE WHERE ID=578
INSERT INTO SENTENCE VALUES(578,'It can also be useful to specify this in the clause:',1,577)
DELETE FROM SENTENCE WHERE ID=579
INSERT INTO SENTENCE VALUES(579,'select',1,578)
DELETE FROM SENTENCE WHERE ID=580
INSERT INTO SENTENCE VALUES(580,'select p.name from Person p',1,579)
DELETE FROM SENTENCE WHERE ID=581
INSERT INTO SENTENCE VALUES(581,'Using syntax can also be beneficial when using subqueries that need to compare against multiple values:',1,580)
DELETE FROM SENTENCE WHERE ID=582
INSERT INTO SENTENCE VALUES(582,'row value constructor',1,581)
DELETE FROM SENTENCE WHERE ID=583
INSERT INTO SENTENCE VALUES(583,'from Cat as cat\u000awhere not ( cat.name, cat.color ) in (\u000a    select cat.name, cat.color from DomesticCat cat\u000a)',1,582)
DELETE FROM SENTENCE WHERE ID=584
INSERT INTO SENTENCE VALUES(584,'One thing to consider when deciding if you want to use this syntax, is that the query will be dependent upon the ordering of the component sub-properties in the metadata.',1,583)
DELETE FROM SENTENCE WHERE ID=585
INSERT INTO SENTENCE VALUES(585,'Copyright \u00a9 2004 Red Hat Middleware, LLC.',1,584)
DELETE FROM SENTENCE WHERE ID=586
INSERT INTO SENTENCE VALUES(586,'Chapter\u00a013.\u00a0Batch processing',1,585)
DELETE FROM SENTENCE WHERE ID=587
INSERT INTO SENTENCE VALUES(587,'Prev',1,586)
DELETE FROM SENTENCE WHERE ID=588
INSERT INTO SENTENCE VALUES(588,'Top of page',1,587)
DELETE FROM SENTENCE WHERE ID=589
INSERT INTO SENTENCE VALUES(589,'Front page',1,588)
DELETE FROM SENTENCE WHERE ID=590
INSERT INTO SENTENCE VALUES(590,'Chapter\u00a015.\u00a0Criteria Queries',1,589)
DELETE FROM SENTENCE WHERE ID=591
INSERT INTO SENTENCE VALUES(591,'Next',1,590)
COMMIT
INSERT INTO PROCESSEDURL VALUES(2,'http://google.pl','2016-11-02')
INSERT INTO SENTENCE VALUES(592,'Wyszukiwarka',2,NULL)
INSERT INTO SENTENCE VALUES(593,'Grafika',2,NULL)
INSERT INTO SENTENCE VALUES(594,'Mapy',2,NULL)
INSERT INTO SENTENCE VALUES(595,'Play',2,NULL)
INSERT INTO SENTENCE VALUES(596,'YouTube',2,NULL)
INSERT INTO SENTENCE VALUES(597,'Wiadomo\u015bci',2,NULL)
INSERT INTO SENTENCE VALUES(598,'Gmail',2,NULL)
INSERT INTO SENTENCE VALUES(599,'Dysk',2,NULL)
INSERT INTO SENTENCE VALUES(600,'Wi\u0119cej',2,NULL)
INSERT INTO SENTENCE VALUES(601,'| |',2,NULL)
INSERT INTO SENTENCE VALUES(602,'Historia online',2,NULL)
INSERT INTO SENTENCE VALUES(603,'Ustawienia',2,NULL)
INSERT INTO SENTENCE VALUES(604,'Zaloguj si\u0119',2,NULL)
INSERT INTO SENTENCE VALUES(605,'Polska',2,NULL)
INSERT INTO SENTENCE VALUES(606,'Szukanie zaawansowane',2,NULL)
INSERT INTO SENTENCE VALUES(607,'Narz\u0119dzia j\u0119zykowe',2,NULL)
INSERT INTO SENTENCE VALUES(608,'Reklamuj si\u0119 w Google',2,NULL)
INSERT INTO SENTENCE VALUES(609,'Rozwi\u0105zania dla firm',2,NULL)
INSERT INTO SENTENCE VALUES(610,'+Google',2,NULL)
INSERT INTO SENTENCE VALUES(611,'Wszystko o Google',2,NULL)
INSERT INTO SENTENCE VALUES(612,'Google.com',2,NULL)
INSERT INTO SENTENCE VALUES(613,'\u00a9 2016 - -',2,NULL)
INSERT INTO SENTENCE VALUES(614,'Prywatno\u015b\u0107',2,NULL)
INSERT INTO SENTENCE VALUES(615,'Warunki',2,NULL)
DELETE FROM SENTENCE WHERE ID=592
INSERT INTO SENTENCE VALUES(592,'Wyszukiwarka',2,0)
DELETE FROM SENTENCE WHERE ID=593
INSERT INTO SENTENCE VALUES(593,'Grafika',2,1)
DELETE FROM SENTENCE WHERE ID=594
INSERT INTO SENTENCE VALUES(594,'Mapy',2,2)
DELETE FROM SENTENCE WHERE ID=595
INSERT INTO SENTENCE VALUES(595,'Play',2,3)
DELETE FROM SENTENCE WHERE ID=596
INSERT INTO SENTENCE VALUES(596,'YouTube',2,4)
DELETE FROM SENTENCE WHERE ID=597
INSERT INTO SENTENCE VALUES(597,'Wiadomo\u015bci',2,5)
DELETE FROM SENTENCE WHERE ID=598
INSERT INTO SENTENCE VALUES(598,'Gmail',2,6)
DELETE FROM SENTENCE WHERE ID=599
INSERT INTO SENTENCE VALUES(599,'Dysk',2,7)
DELETE FROM SENTENCE WHERE ID=600
INSERT INTO SENTENCE VALUES(600,'Wi\u0119cej',2,8)
DELETE FROM SENTENCE WHERE ID=601
INSERT INTO SENTENCE VALUES(601,'| |',2,9)
DELETE FROM SENTENCE WHERE ID=602
INSERT INTO SENTENCE VALUES(602,'Historia online',2,10)
DELETE FROM SENTENCE WHERE ID=603
INSERT INTO SENTENCE VALUES(603,'Ustawienia',2,11)
DELETE FROM SENTENCE WHERE ID=604
INSERT INTO SENTENCE VALUES(604,'Zaloguj si\u0119',2,12)
DELETE FROM SENTENCE WHERE ID=605
INSERT INTO SENTENCE VALUES(605,'Polska',2,13)
DELETE FROM SENTENCE WHERE ID=606
INSERT INTO SENTENCE VALUES(606,'Szukanie zaawansowane',2,14)
DELETE FROM SENTENCE WHERE ID=607
INSERT INTO SENTENCE VALUES(607,'Narz\u0119dzia j\u0119zykowe',2,15)
DELETE FROM SENTENCE WHERE ID=608
INSERT INTO SENTENCE VALUES(608,'Reklamuj si\u0119 w Google',2,16)
DELETE FROM SENTENCE WHERE ID=609
INSERT INTO SENTENCE VALUES(609,'Rozwi\u0105zania dla firm',2,17)
DELETE FROM SENTENCE WHERE ID=610
INSERT INTO SENTENCE VALUES(610,'+Google',2,18)
DELETE FROM SENTENCE WHERE ID=611
INSERT INTO SENTENCE VALUES(611,'Wszystko o Google',2,19)
DELETE FROM SENTENCE WHERE ID=612
INSERT INTO SENTENCE VALUES(612,'Google.com',2,20)
DELETE FROM SENTENCE WHERE ID=613
INSERT INTO SENTENCE VALUES(613,'\u00a9 2016 - -',2,21)
DELETE FROM SENTENCE WHERE ID=614
INSERT INTO SENTENCE VALUES(614,'Prywatno\u015b\u0107',2,22)
DELETE FROM SENTENCE WHERE ID=615
INSERT INTO SENTENCE VALUES(615,'Warunki',2,23)
COMMIT
